"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isIPhone12Mini = exports.isIPhone12ProMax = exports.isIPhone12Pro = exports.isIPhone12 = exports.isIPhone11ProMax = exports.isIPhone11Pro = exports.isIPhone11 = exports.isIPhoneXsMax = exports.isIPhoneXs = exports.isIPhoneXr = exports.isIPhoneX = exports.isIPhoneSE = exports.isIPhoneXFamily = exports.isIPhoneNotchFamily = exports.hasNotch = exports.getStatusBarHeight = void 0;
const react_native_1 = require("react-native");
// ? iPhone X Family
// iPhone X Dimension
const iPhoneX_HEIGHT = 812;
// iPhone Xr Dimension
const iPhoneXr_HEIGHT = 896;
// iPhone XS Dimension
const iPhoneXs_HEIGHT = 896;
// iPhone XsMax Dimension
const iPhoneXsMax_HEIGHT = 896;
// iPhone SE Dimension
const iPhoneSE_HEIGHT = 568;
// ? iPhone 11 Family
// iPhone 11 Dimension
const iPhone11_HEIGHT = 896;
// iPhone 11 Pro Dimension
const iPhone11Pro_HEIGHT = 812;
// iPhone 11 Pro Max Dimension
const iPhone11ProMax_HEIGHT = 896;
// ? iPhone 12 Family
// iPhone 12 Dimension
const iPhone12_HEIGHT = 844;
// iPhone 12 Pro Dimension
const iPhone12Pro_HEIGHT = 844;
// iPhone 12 Pro Max Dimension
const iPhone12ProMax_HEIGHT = 926;
// iPhone 12 Mini Dimension
const iPhone12Mini_HEIGHT = 812;
/**
 * This and hasNotch functions are the same,
 * just want to make two functions with different names
 * hasNotch is more accurate name
 */
const isIPhoneNotchFamily = () => {
    return detection();
};
exports.isIPhoneNotchFamily = isIPhoneNotchFamily;
const isIPhoneXFamily = () => {
    return detection();
};
exports.isIPhoneXFamily = isIPhoneXFamily;
const hasNotch = () => {
    return detection();
};
exports.hasNotch = hasNotch;
const isIPhoneSE = (dim) => dim.height === iPhoneSE_HEIGHT;
exports.isIPhoneSE = isIPhoneSE;
// ? iPhone X Family
const isIPhoneX = (dim) => dim.height === iPhoneX_HEIGHT;
exports.isIPhoneX = isIPhoneX;
const isIPhoneXr = (dim) => dim.height === iPhoneXr_HEIGHT;
exports.isIPhoneXr = isIPhoneXr;
const isIPhoneXs = (dim) => dim.height === iPhoneXs_HEIGHT;
exports.isIPhoneXs = isIPhoneXs;
const isIPhoneXsMax = (dim) => dim.height === iPhoneXsMax_HEIGHT;
exports.isIPhoneXsMax = isIPhoneXsMax;
// ? iPhone 11 Family
const isIPhone11 = (dim) => dim.height === iPhone11_HEIGHT;
exports.isIPhone11 = isIPhone11;
const isIPhone11Pro = (dim) => dim.height === iPhone11Pro_HEIGHT;
exports.isIPhone11Pro = isIPhone11Pro;
const isIPhone11ProMax = (dim) => dim.height === iPhone11ProMax_HEIGHT;
exports.isIPhone11ProMax = isIPhone11ProMax;
// ? iPhone 12 Family
const isIPhone12 = (dim) => dim.height === iPhone12_HEIGHT;
exports.isIPhone12 = isIPhone12;
const isIPhone12Pro = (dim) => dim.height === iPhone12Pro_HEIGHT;
exports.isIPhone12Pro = isIPhone12Pro;
const isIPhone12ProMax = (dim) => dim.height === iPhone12ProMax_HEIGHT;
exports.isIPhone12ProMax = isIPhone12ProMax;
const isIPhone12Mini = (dim) => dim.height === iPhone12Mini_HEIGHT;
exports.isIPhone12Mini = isIPhone12Mini;
const detection = () => {
    const dim = react_native_1.Dimensions.get("window");
    return (react_native_1.Platform.OS === "ios" &&
        !react_native_1.Platform.isPad &&
        !react_native_1.Platform.isTVOS &&
        (isIPhoneX(dim) ||
            isIPhoneXr(dim) ||
            isIPhoneXs(dim) ||
            isIPhoneXsMax(dim) ||
            isIPhone11(dim) ||
            isIPhone11Pro(dim) ||
            isIPhone11ProMax(dim) ||
            isIPhone12(dim) ||
            isIPhone12Pro(dim) ||
            isIPhone12ProMax(dim)));
};
const getStatusBarHeight = () => {
    return react_native_1.Platform.select({
        ios: hasNotch() ? 44 : 30,
        android: react_native_1.StatusBar.currentHeight,
    });
};
exports.getStatusBarHeight = getStatusBarHeight;
//# sourceMappingURL=Notch.js.map