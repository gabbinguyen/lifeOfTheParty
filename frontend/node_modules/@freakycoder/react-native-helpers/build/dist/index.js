"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeText = exports.numberFormat = exports.isIPhone12Mini = exports.isIPhone12ProMax = exports.isIPhone12Pro = exports.isIPhone12 = exports.isIPhone11ProMax = exports.isIPhone11Pro = exports.isIPhone11 = exports.isIPhoneXsMax = exports.isIPhoneXs = exports.isIPhoneXr = exports.isIPhoneX = exports.isIPhoneSE = exports.isIPhoneXFamily = exports.isIPhoneNotchFamily = exports.hasNotch = exports.getStatusBarHeight = exports.PlatformVersion = exports.WindowFontScale = exports.WindowScale = exports.WindowHeight = exports.WindowWidth = exports.ScreenFontScale = exports.ScreenScale = exports.ScreenHeight = exports.ScreenWidth = exports.isAndroid = exports.isIOS = void 0;
const tslib_1 = require("tslib");
const DeviceInfo_1 = require("./helpers/device/DeviceInfo");
Object.defineProperty(exports, "isIOS", { enumerable: true, get: function () { return DeviceInfo_1.isIOS; } });
Object.defineProperty(exports, "isAndroid", { enumerable: true, get: function () { return DeviceInfo_1.isAndroid; } });
Object.defineProperty(exports, "ScreenWidth", { enumerable: true, get: function () { return DeviceInfo_1.ScreenWidth; } });
Object.defineProperty(exports, "ScreenHeight", { enumerable: true, get: function () { return DeviceInfo_1.ScreenHeight; } });
Object.defineProperty(exports, "ScreenScale", { enumerable: true, get: function () { return DeviceInfo_1.ScreenScale; } });
Object.defineProperty(exports, "ScreenFontScale", { enumerable: true, get: function () { return DeviceInfo_1.ScreenFontScale; } });
Object.defineProperty(exports, "WindowWidth", { enumerable: true, get: function () { return DeviceInfo_1.WindowWidth; } });
Object.defineProperty(exports, "WindowHeight", { enumerable: true, get: function () { return DeviceInfo_1.WindowHeight; } });
Object.defineProperty(exports, "WindowScale", { enumerable: true, get: function () { return DeviceInfo_1.WindowScale; } });
Object.defineProperty(exports, "WindowFontScale", { enumerable: true, get: function () { return DeviceInfo_1.WindowFontScale; } });
Object.defineProperty(exports, "PlatformVersion", { enumerable: true, get: function () { return DeviceInfo_1.PlatformVersion; } });
const Notch_1 = require("./helpers/notch/Notch");
Object.defineProperty(exports, "isIPhoneNotchFamily", { enumerable: true, get: function () { return Notch_1.isIPhoneNotchFamily; } });
Object.defineProperty(exports, "isIPhoneXFamily", { enumerable: true, get: function () { return Notch_1.isIPhoneXFamily; } });
Object.defineProperty(exports, "hasNotch", { enumerable: true, get: function () { return Notch_1.hasNotch; } });
Object.defineProperty(exports, "isIPhoneX", { enumerable: true, get: function () { return Notch_1.isIPhoneX; } });
Object.defineProperty(exports, "isIPhoneXr", { enumerable: true, get: function () { return Notch_1.isIPhoneXr; } });
Object.defineProperty(exports, "isIPhoneXs", { enumerable: true, get: function () { return Notch_1.isIPhoneXs; } });
Object.defineProperty(exports, "isIPhoneSE", { enumerable: true, get: function () { return Notch_1.isIPhoneSE; } });
Object.defineProperty(exports, "isIPhoneXsMax", { enumerable: true, get: function () { return Notch_1.isIPhoneXsMax; } });
Object.defineProperty(exports, "getStatusBarHeight", { enumerable: true, get: function () { return Notch_1.getStatusBarHeight; } });
Object.defineProperty(exports, "isIPhone11", { enumerable: true, get: function () { return Notch_1.isIPhone11; } });
Object.defineProperty(exports, "isIPhone11Pro", { enumerable: true, get: function () { return Notch_1.isIPhone11Pro; } });
Object.defineProperty(exports, "isIPhone11ProMax", { enumerable: true, get: function () { return Notch_1.isIPhone11ProMax; } });
Object.defineProperty(exports, "isIPhone12", { enumerable: true, get: function () { return Notch_1.isIPhone12; } });
Object.defineProperty(exports, "isIPhone12Pro", { enumerable: true, get: function () { return Notch_1.isIPhone12Pro; } });
Object.defineProperty(exports, "isIPhone12ProMax", { enumerable: true, get: function () { return Notch_1.isIPhone12ProMax; } });
Object.defineProperty(exports, "isIPhone12Mini", { enumerable: true, get: function () { return Notch_1.isIPhone12Mini; } });
const normalizeText_1 = tslib_1.__importDefault(require("./helpers/normalize/normalizeText"));
exports.normalizeText = normalizeText_1.default;
const Text_1 = require("./helpers/text/Text");
Object.defineProperty(exports, "numberFormat", { enumerable: true, get: function () { return Text_1.numberFormat; } });
//# sourceMappingURL=index.js.map