{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewEvent.js\";\nimport React, { Component } from 'react'; // import {Button} from 'react-bootstrap'\n\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\nlet eventsURL = 'http://localhost:3000/events/';\nlet eventsJSON = [];\nlet eventID = \"\";\nexport default class NewEvent extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newEvent = {\n        name: this.state.name,\n        date: this.state.date,\n        location: this.state.location\n      };\n      fetch(\"http://localhost:3000/events\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        },\n        body: JSON.stringify(newEvent)\n      }).then(res => res.json()).then(event => {\n        this.props.history.push('/dashboard');\n      });\n      this.fetchLastEvent();\n    };\n\n    this.state = {\n      name: '',\n      date: '',\n      location: '',\n      event: ' '\n    };\n  }\n\n  fetchLastEvent() {\n    fetch(eventsURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Key': localStorage.getItem('auth_key')\n      }\n    }).then(res => res.json()).then(function (json) {\n      eventsJSON = json;\n      eventID = eventsJSON[eventsJSON.length - 1];\n      const newCollab = {\n        event_id: eventID.id,\n        user_id: eventID.user_id\n      };\n      fetch(\"http://localhost:3000/collaborators\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        },\n        body: JSON.stringify(newCollab)\n      }).then(res => res.json());\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        size: \"huge\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          onChange: this.handleChange,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            placeholder: \"Type of Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(DateInput, {\n            inline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"date\",\n            value: this.state.date,\n            placeholder: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          onChange: this.handleChange,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            value: this.state.location,\n            placeholder: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"huge\",\n          type: \"submit\",\n          \"text-align\": \"center\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewEvent.js"],"names":["React","Component","Button","Checkbox","Form","DateInput","TimeInput","DateTimeInput","DatesRangeInput","eventsURL","eventsJSON","eventID","NewEvent","constructor","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","newEvent","state","date","location","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","event","props","history","push","fetchLastEvent","length","newCollab","event_id","id","user_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import {Button} from 'react-bootstrap'\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport {\n    DateInput,\n    TimeInput,\n    DateTimeInput,\n    DatesRangeInput\n  } from 'semantic-ui-calendar-react';\n\nlet eventsURL = 'http://localhost:3000/events/'\nlet eventsJSON = []\nlet eventID = \"\"\n\nexport default class NewEvent extends Component {\n    constructor(){\n        super()\n        this.state = {\n            name: '',\n            date: '',\n            location: '',\n            event: ' '\n        }\n    }\n\n    handleChange=(e)=> {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const newEvent={\n            name: this.state.name,\n            date: this.state.date,\n            location: this.state.location\n        }\n        fetch(\"http://localhost:3000/events\", {\n            method: \"POST\",\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            },\n            body: JSON.stringify(newEvent)\n        })\n        .then(res=>res.json())\n        .then(event=>{this.props.history.push('/dashboard')})\n        this.fetchLastEvent()\n    }\n\n    fetchLastEvent() {\n        fetch(eventsURL, {\n            method:'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            }\n        })\n        .then(res => res.json())\n        .then(function(json){\n              eventsJSON = json;\n              eventID = eventsJSON[eventsJSON.length -1]\n              const newCollab={\n                event_id: eventID.id,\n                user_id: eventID.user_id\n            }\n            fetch(\"http://localhost:3000/collaborators\", {\n                method: \"POST\",\n                headers:{\n                    'Content-Type': 'application/json',\n                    'Auth-Key': localStorage.getItem('auth_key')\n                },\n                body: JSON.stringify(newCollab)\n            })\n                .then(res => res.json())\n            })      \n    }\n\n    render() {\n        return (\n            <div>\n            <Form size=\"huge\" onSubmit={this.handleSubmit}> \n                <Form.Field onChange={this.handleChange}> \n                <input type=\"text\" name=\"name\" value={this.state.name} placeholder =\"Type of Event\" />\n                </Form.Field>\n                <Form.Field onChange={this.handleChange}> \n                <DateInput inline />\n\n                <input type=\"text\" name=\"date\" value={this.state.date} placeholder= \"Date\" />\n                </Form.Field>\n                <Form.Field onChange={this.handleChange}> \n                <input type=\"text\" name=\"location\" value={this.state.location} placeholder= \"Location\" />\n                </Form.Field>\n                <Button  size=\"huge\" type=\"submit\" text-align=\"center\">Submit</Button>\n            </Form>\n\n\n            {/* <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name=\"name\" value={this.state.name} placeholder =\"Type of Event\" onChange={this.handleChange}/><br></br>        \n                <input type=\"text\" name=\"date\" value={this.state.date} placeholder= \"Date\" onChange={this.handleChange}/><br></br>\n                <input type=\"text\" name=\"location\" value={this.state.location} placeholder= \"Location\" onChange={this.handleChange}/><br></br>\n                <Button type=\"submit\" text-align=\"center\">Submit</Button>\n            </form>             */}\n        </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}