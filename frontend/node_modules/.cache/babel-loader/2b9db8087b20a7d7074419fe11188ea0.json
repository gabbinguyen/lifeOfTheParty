{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/EventCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Modal } from 'react-bootstrap';\nimport AccomCard from './AccomCard.js';\nimport ActCard from './ActCard.js';\nimport FlightCard from './FlightCard.js';\nimport ActCRUD from './ActCRUD.js';\nimport FlightCRUD from './FlightCRUD.js';\nimport CollabCard from './CollabCard.js';\nimport AddCollab from './AddCollab.js';\nimport ExpenseCard from './ExpenseCard.js';\nimport ExpenseCRUD from './ExpenseCRUD.js';\nimport NewAccom from './NewAccom.js';\nimport { Button, Card, Grid, Icon } from 'semantic-ui-react';\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\nexport default function EventCard(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const collabMap = props.collaborators.map(collaborator => /*#__PURE__*/_jsxDEV(CollabCard, {\n    collaborator: collaborator,\n    name: collaborator.user.name,\n    collabDelete: props.collabDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this));\n  const col1 = [];\n\n  for (let i = 0; i < collabMap.length; i += 4) {\n    col1.push(collabMap[i]);\n  }\n\n  const col2 = [];\n\n  for (let i = 1; i < collabMap.length; i += 4) {\n    col2.push(collabMap[i]);\n  }\n\n  const col3 = [];\n\n  for (let i = 2; i < collabMap.length; i += 4) {\n    col3.push(collabMap[i]);\n  }\n\n  const col4 = [];\n\n  for (let i = 3; i < collabMap.length; i += 4) {\n    col4.push(collabMap[i]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [props.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 34\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), props.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 30\n          }, this), props.location, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \" Show Details \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => props.handleDelete(props.event),\n            children: \" Delete Event \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 5,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Collaborators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: col1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: col2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: col3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: col4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: handleShow,\n            children: /*#__PURE__*/_jsxDEV(AiOutlineUsergroupAdd, {\n              size: 25\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: show,\n            onHide: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(AddCollab, {\n                users: props.users,\n                event: props.event,\n                addCollab: props.addCollab\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \" Accommodations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), props.accommodations.map(accommodation => /*#__PURE__*/_jsxDEV(AccomCard, {\n            event: props.event,\n            accommodation: accommodation,\n            location: accommodation.location,\n            date: accommodation.date,\n            accomDelete: props.accomDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: handleShow,\n            children: /*#__PURE__*/_jsxDEV(AiOutlineUsergroupAdd, {\n              size: 25\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: show,\n            onHide: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(NewAccom, {\n                event_id: props.event.id,\n                newAccom: props.newAccom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(NewAccom, {\n              event_id: props.event.id,\n              newAccom: props.newAccom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \" Activities \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), props.activities.map(activity => /*#__PURE__*/_jsxDEV(ActCard, {\n            event: props.event,\n            activity: activity,\n            description: activity.description,\n            date: activity.date,\n            time: activity.time,\n            actDelete: props.actDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: /*#__PURE__*/_jsxDEV(ActCRUD, {\n              event_id: props.event.id,\n              activities: props.activities,\n              newAct: props.newAct\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EventCard, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = EventCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/EventCard.js"],"names":["React","useState","Row","Col","Modal","AccomCard","ActCard","FlightCard","ActCRUD","FlightCRUD","CollabCard","AddCollab","ExpenseCard","ExpenseCRUD","NewAccom","Button","Card","Grid","Icon","AiOutlineUsergroupAdd","EventCard","props","show","setShow","handleClose","handleShow","collabMap","collaborators","map","collaborator","user","name","collabDelete","col1","i","length","push","col2","col3","col4","date","location","handleDelete","event","users","addCollab","accommodations","accommodation","accomDelete","id","newAccom","activities","activity","description","time","actDelete","newAct"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Row, Col, Modal} from 'react-bootstrap'\nimport AccomCard from './AccomCard.js'\nimport ActCard from './ActCard.js'\nimport FlightCard from './FlightCard.js'\nimport ActCRUD from './ActCRUD.js'\nimport FlightCRUD from './FlightCRUD.js'\nimport CollabCard from './CollabCard.js'\nimport AddCollab from './AddCollab.js'\nimport ExpenseCard from './ExpenseCard.js'\nimport ExpenseCRUD from './ExpenseCRUD.js'\nimport NewAccom from './NewAccom.js'\nimport { Button, Card, Grid, Icon } from 'semantic-ui-react'\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai'\n\n\nexport default function EventCard(props) {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const collabMap = props.collaborators.map(collaborator=> \n        <CollabCard \n            collaborator={collaborator}\n            name={collaborator.user.name}\n            collabDelete={props.collabDelete}\n        />)\n\n    const col1 = []\n        for (let i = 0; i < collabMap.length; i+=4) {\n            col1.push(collabMap[i])\n        } \n    const col2 = []\n        for (let i = 1; i < collabMap.length; i+=4) {\n            col2.push(collabMap[i])\n        } \n    const col3 = []\n        for (let i = 2; i < collabMap.length; i+=4) {\n            col3.push(collabMap[i])\n        } \n    const col4 = []\n        for (let i = 3; i < collabMap.length; i+=4) {\n            col4.push(collabMap[i])\n        } \n\n    return (\n        <div>\n        <Grid> \n            <Grid.Column width={4}> \n                <Card > \n                <h5>{props.name} <br/> </h5>\n                {props.date} <br/> \n                {props.location} <br/><br/>\n\n                <Button  > Show Details </Button> \n                <Button onClick={() => props.handleDelete(props.event)} > Delete Event </Button> \n                </Card> <br/>\n            </Grid.Column>\n\n{/* COL1  */}\n    {/* COLLABORATORS */}\n            <Grid.Column width={5}>\n                <Card> \n                    <h6>Collaborators</h6>\n                    <Grid> \n                        <Grid.Column width={2}> \n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                        {col1} \n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                        {col2}\n                        </Grid.Column>\n                        <Grid.Column width={3}> \n                        {col3}\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                        {col4}\n                        </Grid.Column>\n                    </Grid>\n                    <br/>\n\n                    <Button variant=\"info\" onClick={handleShow}>\n                        <AiOutlineUsergroupAdd size={25} />  \n                    </Button>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <AddCollab users={props.users} event={props.event} addCollab={props.addCollab}/>\n                            </Modal.Body>\n                        </Modal>\n                </Card>\n\n\n    {/* ACCOMODATIONS */}\n\n                <Card> \n                    <h6> Accommodations</h6>\n                    {props.accommodations.map(accommodation => \n\n                        <AccomCard \n                        event={props.event} \n                        accommodation={accommodation} \n                        location={accommodation.location} \n                        date={accommodation.date} \n                        accomDelete={props.accomDelete}\n                        /> \n                        )}\n                        <br/>\n\n                        <Button variant=\"info\" onClick={handleShow}>\n                            <AiOutlineUsergroupAdd size={25} />  \n                        </Button>\n                        <Modal show={show} onHide={handleClose}>\n                            <Modal.Header closeButton>\n                            </Modal.Header>\n                            <Modal.Body>\n                            <NewAccom \n                            event_id={props.event.id} \n                            newAccom={props.newAccom}\n                            /> \n                            </Modal.Body>\n                        </Modal>\n\n                    <Button> \n                            <NewAccom \n                            event_id={props.event.id} \n                            newAccom={props.newAccom}\n                            /> \n                        </Button>\n                </Card>\n            </Grid.Column>\n\n{/* END COL1 */}\n\n{/* COL 2 */}                     \n{/* ACTIVITIES */}\n\n            <Grid.Column width={6} > \n            <Card> \n\n                        <h6> Activities </h6>\n                        {props.activities.map(activity=> \n                            <ActCard \n                            event={props.event} \n                            activity={activity}\n                            description={activity.description}\n                            date={activity.date}\n                            time={activity.time}\n                            actDelete={props.actDelete}\n                            /> \n                            )} <br/>\n                            \n                        <Button> \n                            <ActCRUD \n                            event_id={props.event.id} \n                            activities={props.activities}\n                            newAct={props.newAct}\n                            /> \n                        </Button> <br /> \n                </Card>\n            </Grid.Column>\n{/* Insert below here */}                \n  \n        </Grid>  \n\n    </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}