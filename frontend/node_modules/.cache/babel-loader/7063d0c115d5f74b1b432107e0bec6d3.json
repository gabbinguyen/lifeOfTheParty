{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar tokensMap = {\n  // 'D MMMM': '',\n  // 'Do MMMM': '',\n  // 'DD MMMM': '',\n  M: 'L',\n  Mo: 'Mo',\n  MM: 'LL',\n  MMM: 'LLL',\n  MMMM: 'LLLL',\n  Q: 'q',\n  Qo: 'qo',\n  D: 'd',\n  Do: 'do',\n  DD: 'dd',\n  DDD: 'D',\n  DDDo: 'Do',\n  DDDD: 'DDD',\n  d: 'i',\n  do: 'io',\n  dd: 'iiiiii',\n  ddd: 'iii',\n  dddd: 'iiii',\n  A: 'a',\n  a: 'a',\n  aa: 'aaaa',\n  E: 'i',\n  W: 'I',\n  Wo: 'Io',\n  WW: 'II',\n  YY: 'yy',\n  YYYY: 'yyyy',\n  GG: 'RR',\n  GGGG: 'RRRR',\n  H: 'H',\n  HH: 'HH',\n  h: 'h',\n  hh: 'hh',\n  m: 'm',\n  mm: 'mm',\n  s: 's',\n  ss: 'ss',\n  S: 'S',\n  SS: 'SS',\n  SSS: 'SSS',\n  Z: 'xxx',\n  ZZ: 'xx',\n  X: 't',\n  x: 'T'\n};\nvar v1tokens = Object.keys(tokensMap).sort().reverse();\nvar tokensRegExp = new RegExp('(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + v1tokens.join('|') + '|.)', 'g');\n\nfunction convertTokens(format) {\n  var tokensCaptures = format.match(tokensRegExp);\n\n  if (tokensCaptures) {\n    return tokensCaptures.reduce(function (acc, tokenString, index) {\n      var v2token = tokensMap[tokenString];\n\n      if (!v2token) {\n        var escapedCaptures = tokenString.match(/^\\[(.+)\\]$/);\n\n        if (escapedCaptures) {\n          acc.textBuffer.push(escapedCaptures[1]);\n        } else {\n          acc.textBuffer.push(tokenString);\n        }\n      }\n\n      var endOfString = index === tokensCaptures.length - 1;\n\n      if (acc.textBuffer.length && (v2token || endOfString)) {\n        acc.formatBuffer.push(\"'\" + acc.textBuffer.join('') + \"'\");\n        acc.textBuffer = [];\n      }\n\n      if (v2token) acc.formatBuffer.push(v2token);\n      return acc;\n    }, {\n      formatBuffer: [],\n      textBuffer: []\n    }).formatBuffer.join('');\n  } else {\n    return format;\n  }\n}\n\nexports.convertTokens = convertTokens;","map":{"version":3,"sources":["../../../src/v2/convertTokens/index.ts"],"names":[],"mappings":";;;;;AAIA,IAAM,SAAS,GAAc;AAC3B;AACA;AACA;GACA,EAAC,GAJ0B;IAK3B,EAAE,IALyB;IAM3B,EAAE,IANyB;AAO3B,EAAA,GAAA,EAAG,KAPwB;AAQ3B,EAAA,IAAA,EAAI,MARuB;GAS3B,EAAC,GAT0B;IAU3B,EAAE,IAVyB;GAW3B,EAAC,GAX0B;IAY3B,EAAE,IAZyB;IAa3B,EAAE,IAbyB;AAc3B,EAAA,GAAA,EAAG,GAdwB;AAe3B,EAAA,IAAA,EAAI,IAfuB;AAgB3B,EAAA,IAAA,EAAI,KAhBuB;GAiB3B,EAAC,GAjB0B;IAkB3B,EAAE,IAlByB;IAmB3B,EAAE,QAnByB;AAoB3B,EAAA,GAAA,EAAG,KApBwB;AAqB3B,EAAA,IAAA,EAAI,MArBuB;GAsB3B,EAAC,GAtB0B;GAuB3B,EAAC,GAvB0B;IAwB3B,EAAE,MAxByB;GAyB3B,EAAC,GAzB0B;GA0B3B,EAAC,GA1B0B;IA2B3B,EAAE,IA3ByB;IA4B3B,EAAE,IA5ByB;IA6B3B,EAAE,IA7ByB;AA8B3B,EAAA,IAAA,EAAI,MA9BuB;IA+B3B,EAAE,IA/ByB;AAgC3B,EAAA,IAAA,EAAI,MAhCuB;GAiC3B,EAAC,GAjC0B;IAkC3B,EAAE,IAlCyB;GAmC3B,EAAC,GAnC0B;IAoC3B,EAAE,IApCyB;GAqC3B,EAAC,GArC0B;IAsC3B,EAAE,IAtCyB;GAuC3B,EAAC,GAvC0B;IAwC3B,EAAE,IAxCyB;GAyC3B,EAAC,GAzC0B;IA0C3B,EAAE,IA1CyB;AA2C3B,EAAA,GAAA,EAAG,KA3CwB;GA4C3B,EAAC,KA5C0B;IA6C3B,EAAE,IA7CyB;GA8C3B,EAAC,GA9C0B;GA+C3B,EAAC;AA/C0B,CAA7B;AAkDA,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAP,CAAY,SAAZ,EACd,IADc,GAEd,OAFc,EAAjB;AAIA,IAAM,YAAY,GAAG,IAAI,MAAJ,CAUrB,4BAA4C,GAA5C,GAA4C,QAAA,CAAA,IAAA,CAAA,GAAA,CAA5C,GAA4C,KAVvB,EAWnB,GAXmB,CAArB;;AAaI,SAAA,aAAA,CAAO,MAAP,EAAqB;MAClB,cACC,GAAA,MAAA,CAAC,KAAD,CAAM,YAAN,C;;MACE,c,EAAM;WAEN,cAAY,CACV,MADF,CAEE,UAAA,GAAA,EAAI,WAAJ,EAAmB,KAAnB,EAAqB;UACnB,OAAA,GAAI,SAAA,CAAU,WAAV,C;;WACL,O,EAAA;YAAM,eAAA,GAAA,WAAA,CAAA,KAAA,CAAA,YAAA,C;;YACL,e,EAAI;aACL,CAAA,U,CAAA,I,CAAA,eAAA,CAAA,CAAA,C;AACF,S,MAAA;AAED,UAAA,GAAM,CAAA,UAAN,CAAiB,IAAjB,CAAoB,WAApB;AACA;AACE;;UACA,WAAI,GAAA,KAAa,KAAE,cAAA,CAAA,MAAA,GAAA,C;;AACpB,UAAA,GAAA,CAAA,UAAA,CAAA,MAAA,KAAA,OAAA,IAAA,WAAA,CAAA,EAAA;AAED,QAAA,GAAA,CAAI,YAAJ,CAAW,IAAX,CAAW,MAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CAAA,EAAA,CAAA,GAAA,GAAX;YAAa,U,GAAI,E;AAEjB;;AACD,UACC,OADD,EACC,GAAY,CAAE,YAAd,CAAkB,IAAlB,CAAgC,OAAhC;AAEH,aAAA,GAAA;AACJ,KAtBO,EAsBD;AAAA,MAAA,YAAA,EAAA,EAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAtBC,EAwBP,YAxBO,CAwBP,IAxBO,CAwBP,EAxBO,C;AAyBT,G,MAAA;AAjCD,WAAA,MAAA","sourceRoot":"","sourcesContent":["'use strict'\nObject.defineProperty(exports, '__esModule', { value: true })\nvar tokensMap = {\n  // 'D MMMM': '',\n  // 'Do MMMM': '',\n  // 'DD MMMM': '',\n  M: 'L',\n  Mo: 'Mo',\n  MM: 'LL',\n  MMM: 'LLL',\n  MMMM: 'LLLL',\n  Q: 'q',\n  Qo: 'qo',\n  D: 'd',\n  Do: 'do',\n  DD: 'dd',\n  DDD: 'D',\n  DDDo: 'Do',\n  DDDD: 'DDD',\n  d: 'i',\n  do: 'io',\n  dd: 'iiiiii',\n  ddd: 'iii',\n  dddd: 'iiii',\n  A: 'a',\n  a: 'a',\n  aa: 'aaaa',\n  E: 'i',\n  W: 'I',\n  Wo: 'Io',\n  WW: 'II',\n  YY: 'yy',\n  YYYY: 'yyyy',\n  GG: 'RR',\n  GGGG: 'RRRR',\n  H: 'H',\n  HH: 'HH',\n  h: 'h',\n  hh: 'hh',\n  m: 'm',\n  mm: 'mm',\n  s: 's',\n  ss: 'ss',\n  S: 'S',\n  SS: 'SS',\n  SSS: 'SSS',\n  Z: 'xxx',\n  ZZ: 'xx',\n  X: 't',\n  x: 'T'\n}\nvar v1tokens = Object.keys(tokensMap)\n  .sort()\n  .reverse()\nvar tokensRegExp = new RegExp(\n  '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + v1tokens.join('|') + '|.)',\n  'g'\n)\nfunction convertTokens(format) {\n  var tokensCaptures = format.match(tokensRegExp)\n  if (tokensCaptures) {\n    return tokensCaptures\n      .reduce(\n        function(acc, tokenString, index) {\n          var v2token = tokensMap[tokenString]\n          if (!v2token) {\n            var escapedCaptures = tokenString.match(/^\\[(.+)\\]$/)\n            if (escapedCaptures) {\n              acc.textBuffer.push(escapedCaptures[1])\n            } else {\n              acc.textBuffer.push(tokenString)\n            }\n          }\n          var endOfString = index === tokensCaptures.length - 1\n          if (acc.textBuffer.length && (v2token || endOfString)) {\n            acc.formatBuffer.push(\"'\" + acc.textBuffer.join('') + \"'\")\n            acc.textBuffer = []\n          }\n          if (v2token) acc.formatBuffer.push(v2token)\n          return acc\n        },\n        { formatBuffer: [], textBuffer: [] }\n      )\n      .formatBuffer.join('')\n  } else {\n    return format\n  }\n}\nexports.convertTokens = convertTokens\n//# sourceMappingURL=index.js.map\n"]},"metadata":{},"sourceType":"script"}