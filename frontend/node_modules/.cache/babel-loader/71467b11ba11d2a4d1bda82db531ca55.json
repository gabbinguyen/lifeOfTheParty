{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle, useForwardedRef } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledIcon, StyledSuggestions } from './StyledTextInput';\n\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n\n    return suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar defaultDropAlign = {\n  top: 'bottom',\n  left: 'left'\n};\nvar defaultMessages = {\n  enterSelect: '(Press Enter to Select)',\n  suggestionsCount: 'suggestions available',\n  suggestionsExist: 'This input has suggestions use arrow keys to navigate',\n  suggestionIsOpen: 'Suggestions drop is open, continue to use arrow keys to navigate'\n};\nvar TextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      defaultValue = _ref.defaultValue,\n      _ref$dropAlign = _ref.dropAlign,\n      dropAlign = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign,\n      dropHeight = _ref.dropHeight,\n      dropTarget = _ref.dropTarget,\n      dropProps = _ref.dropProps,\n      icon = _ref.icon,\n      id = _ref.id,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? defaultMessages : _ref$messages,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      onKeyDown = _ref.onKeyDown,\n      onSelect = _ref.onSelect,\n      onSuggestionSelect = _ref.onSuggestionSelect,\n      onSuggestionsClose = _ref.onSuggestionsClose,\n      onSuggestionsOpen = _ref.onSuggestionsOpen,\n      placeholder = _ref.placeholder,\n      plain = _ref.plain,\n      readOnly = _ref.readOnly,\n      reverse = _ref.reverse,\n      suggestions = _ref.suggestions,\n      textAlign = _ref.textAlign,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"a11yTitle\", \"defaultValue\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"icon\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"readOnly\", \"reverse\", \"suggestions\", \"textAlign\", \"value\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useForwardedRef(ref);\n  var dropRef = useRef();\n  var suggestionsRef = useRef();\n  var suggestionRefs = {}; // if this is a readOnly property, don't set a name with the form context\n  // this allows Select to control the form context for the name.\n\n  var _formContext$useFormI = formContext.useFormInput(readOnly ? undefined : name, valueProp),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(),\n      showDrop = _useState2[0],\n      setShowDrop = _useState2[1];\n\n  var handleSuggestionSelect = useMemo(function () {\n    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;\n  }, [onSelect, onSuggestionSelect]);\n  var handleTextSelect = useMemo(function () {\n    return onSelect && onSuggestionSelect ? onSelect : undefined;\n  }, [onSelect, onSuggestionSelect]); // if we have no suggestions, close drop if it's open\n\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      setShowDrop(false);\n      if (onSuggestionsClose) onSuggestionsClose();\n    }\n  }, [onSuggestionsClose, showDrop, suggestions]); // If we have suggestions and focus, open drop if it's closed.\n  // This can occur when suggestions are tied to the value.\n  // We don't want focus or showDrop in the dependencies because we\n  // don't want to open the drop just because Esc close it.\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  useEffect(function () {\n    if (focus && !showDrop && suggestions && suggestions.length) {\n      setShowDrop(true);\n      if (onSuggestionsOpen) onSuggestionsOpen();\n    }\n  }, [onSuggestionsOpen, suggestions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  var _useState3 = useState(-1),\n      activeSuggestionIndex = _useState3[0],\n      setActiveSuggestionIndex = _useState3[1]; // reset activeSuggestionIndex when the drop is closed\n\n\n  useEffect(function () {\n    if (activeSuggestionIndex !== -1 && !showDrop) {\n      setActiveSuggestionIndex(-1);\n    }\n  }, [activeSuggestionIndex, showDrop]); // announce active suggestion\n\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + messages.enterSelect);\n    }\n  }, [activeSuggestionIndex, announce, messages, suggestions]);\n\n  var _useState4 = useState(-1),\n      selectedSuggestionIndex = _useState4[0],\n      setSelectedSuggestionIndex = _useState4[1]; // set selectedSuggestionIndex based on value and current suggestions\n\n\n  useEffect(function () {\n    if (suggestions) {\n      var suggestionValues = suggestions.map(function (suggestion) {\n        return typeof suggestion === 'object' ? suggestion.value : suggestion;\n      });\n      setSelectedSuggestionIndex(suggestionValues.indexOf(value));\n    } else setSelectedSuggestionIndex(-1);\n  }, [suggestions, value]); // make sure activeSuggestion remains visible in scroll\n\n  useEffect(function () {\n    var buttonNode = suggestionRefs[activeSuggestionIndex];\n    var optionsNode = suggestionsRef.current;\n\n    if (buttonNode && isNodeAfterScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop - (optionsNode.getBoundingClientRect().height - buttonNode.getBoundingClientRect().height));\n    }\n\n    if (buttonNode && isNodeBeforeScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop);\n    }\n  }, [activeSuggestionIndex, suggestionRefs]);\n  var openDrop = useCallback(function () {\n    setShowDrop(true);\n    announce(messages.suggestionIsOpen);\n    announce(suggestions.length + \" \" + messages.suggestionsCount);\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  }, [announce, messages.suggestionsCount, messages.suggestionIsOpen, onSuggestionsOpen, suggestions]);\n  var closeDrop = useCallback(function () {\n    setShowDrop(false);\n    if (messages.onSuggestionsClose) onSuggestionsClose();\n    if (onSuggestionsClose) onSuggestionsClose();\n  }, [messages.onSuggestionsClose, onSuggestionsClose]);\n\n  var onNextSuggestion = function onNextSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var onPreviousSuggestion = function onPreviousSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var showStyledPlaceholder = placeholder && typeof placeholder !== 'string' && !(inputRef.current && inputRef.current.value);\n  var drop;\n  var extraProps = {\n    onSelect: handleTextSelect\n  };\n\n  if (showDrop) {\n    drop =\n    /*#__PURE__*/\n    // keyboard access needed here in case user clicks\n    // and drags on scroll bar and focus shifts to drop\n    React.createElement(Keyboard, {\n      onDown: function onDown(event) {\n        return onNextSuggestion(event);\n      },\n      onUp: function onUp(event) {\n        return onPreviousSuggestion(event);\n      },\n      onEnter: function onEnter(event) {\n        // we stole the focus, give it back\n        inputRef.current.focus();\n        closeDrop();\n\n        if (handleSuggestionSelect) {\n          var adjustedEvent = event;\n          adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n          handleSuggestionSelect(adjustedEvent);\n        }\n\n        setValue(suggestions[activeSuggestionIndex]);\n      }\n    }, /*#__PURE__*/React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || inputRef.current,\n      onClickOutside: closeDrop,\n      onEsc: closeDrop\n    }, dropProps), /*#__PURE__*/React.createElement(ContainerBox, {\n      ref: suggestionsRef,\n      overflow: \"auto\",\n      dropHeight: dropHeight\n    }, /*#__PURE__*/React.createElement(StyledSuggestions, null, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step\n    }, function (suggestion, index, itemRef) {\n      // Determine whether the label is done as a child or\n      // as an option Button kind property.\n      var renderedLabel = renderLabel(suggestion);\n      var child;\n      if (typeof renderedLabel !== 'string') // must be an element rendered by suggestions.label\n        child = renderedLabel;else if (!theme.button.option) // don't have theme support, need to layout here\n        child = /*#__PURE__*/React.createElement(Box, {\n          align: \"start\",\n          pad: \"small\"\n        }, renderedLabel); // if we have a child, turn on plain, and hoverIndicator\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index,\n        ref: itemRef\n      }, /*#__PURE__*/React.createElement(Button, {\n        active: activeSuggestionIndex === index || selectedSuggestionIndex === index,\n        ref: function ref(r) {\n          suggestionRefs[index] = r;\n        },\n        fill: true,\n        plain: !child ? undefined : true,\n        align: \"start\",\n        kind: !child ? 'option' : undefined,\n        hoverIndicator: !child ? undefined : 'background',\n        label: !child ? renderedLabel : undefined,\n        onClick: function onClick(event) {\n          // we stole the focus, give it back\n          inputRef.current.focus();\n          closeDrop();\n\n          if (handleSuggestionSelect) {\n            event.persist();\n            var adjustedEvent = event;\n            adjustedEvent.suggestion = suggestion;\n            adjustedEvent.target = inputRef.current;\n            handleSuggestionSelect(adjustedEvent);\n          }\n\n          setValue(suggestion);\n        },\n        onMouseOver: function onMouseOver() {\n          return setActiveSuggestionIndex(index);\n        },\n        onFocus: function onFocus() {\n          return setActiveSuggestionIndex(index);\n        }\n      }, child));\n    })))));\n  }\n\n  return /*#__PURE__*/React.createElement(StyledTextInputContainer, {\n    plain: plain\n  }, showStyledPlaceholder && /*#__PURE__*/React.createElement(StyledPlaceholder, null, placeholder), icon && /*#__PURE__*/React.createElement(StyledIcon, {\n    reverse: reverse,\n    theme: theme\n  }, icon), /*#__PURE__*/React.createElement(Keyboard, {\n    onEnter: function onEnter(event) {\n      closeDrop();\n\n      if (activeSuggestionIndex >= 0 && handleSuggestionSelect) {\n        // prevent submitting forms when choosing a suggestion\n        event.preventDefault();\n        event.persist();\n        var adjustedEvent = event;\n        adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n        adjustedEvent.target = inputRef.current;\n        handleSuggestionSelect(adjustedEvent);\n      }\n    },\n    onEsc: showDrop ? function (event) {\n      closeDrop(); // we have to stop both synthetic events and native events\n      // drop and layer should not close by pressing esc on this\n      // input\n\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    } : undefined,\n    onTab: showDrop ? closeDrop : undefined,\n    onUp: showDrop && suggestions && suggestions.length > 0 && activeSuggestionIndex ? function (event) {\n      onPreviousSuggestion(event);\n    } : undefined,\n    onDown: suggestions && suggestions.length > 0 ? function (event) {\n      if (!showDrop) {\n        openDrop();\n      } else {\n        onNextSuggestion(event);\n      }\n    } : undefined,\n    onKeyDown: onKeyDown\n  }, /*#__PURE__*/React.createElement(StyledTextInput, _extends({\n    \"aria-label\": a11yTitle,\n    ref: inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    icon: icon,\n    reverse: reverse,\n    focus: focus,\n    textAlign: textAlign\n  }, rest, extraProps, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value),\n    readOnly: readOnly,\n    onFocus: function onFocus(event) {\n      setFocus(true);\n\n      if (suggestions && suggestions.length > 0) {\n        announce(messages.suggestionsExist);\n        openDrop();\n      }\n\n      if (_onFocus) _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false);\n      if (_onBlur) _onBlur(event);\n    },\n    onChange: readOnly ? undefined : function (event) {\n      setValue(event.target.value);\n      if (onChange) onChange(event);\n    }\n  }))), drop);\n});\nTextInput.displayName = 'TextInput';\nvar TextInputDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TextInputDoc = require('./doc').doc(TextInput);\n}\n\nvar TextInputWrapper = TextInputDoc || TextInput;\nexport { TextInputWrapper as TextInput };","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/node_modules/grommet/es6/components/TextInput/TextInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","useCallback","useContext","useEffect","useMemo","useRef","useState","styled","ThemeContext","defaultProps","Box","Button","Drop","InfiniteScroll","Keyboard","FormContext","AnnounceContext","isNodeAfterScroll","isNodeBeforeScroll","sizeStyle","useForwardedRef","StyledTextInput","StyledTextInputContainer","StyledPlaceholder","StyledIcon","StyledSuggestions","renderLabel","suggestion","label","value","stringLabel","ContainerBox","withConfig","displayName","componentId","props","dropHeight","theme","defaultDropAlign","top","left","defaultMessages","enterSelect","suggestionsCount","suggestionsExist","suggestionIsOpen","TextInput","_ref","ref","a11yTitle","defaultValue","_ref$dropAlign","dropAlign","dropTarget","dropProps","icon","id","_ref$messages","messages","name","_onBlur","onBlur","onChange","_onFocus","onFocus","onKeyDown","onSelect","onSuggestionSelect","onSuggestionsClose","onSuggestionsOpen","placeholder","plain","readOnly","reverse","suggestions","textAlign","valueProp","rest","announce","formContext","inputRef","dropRef","suggestionsRef","suggestionRefs","_formContext$useFormI","useFormInput","undefined","setValue","_useState","focus","setFocus","_useState2","showDrop","setShowDrop","handleSuggestionSelect","handleTextSelect","_useState3","activeSuggestionIndex","setActiveSuggestionIndex","_useState4","selectedSuggestionIndex","setSelectedSuggestionIndex","suggestionValues","map","buttonNode","optionsNode","current","scrollTo","offsetTop","getBoundingClientRect","height","openDrop","closeDrop","onNextSuggestion","event","preventDefault","nextActiveIndex","Math","min","onPreviousSuggestion","max","showStyledPlaceholder","drop","extraProps","createElement","onDown","onUp","onEnter","adjustedEvent","align","responsive","onClickOutside","onEsc","overflow","items","step","select","index","itemRef","renderedLabel","child","button","option","pad","active","r","fill","kind","hoverIndicator","onClick","persist","onMouseOver","stopPropagation","nativeEvent","stopImmediatePropagation","onTab","autoComplete","TextInputDoc","process","env","NODE_ENV","require","doc","TextInputWrapper"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle, useForwardedRef } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledIcon, StyledSuggestions } from './StyledTextInput';\n\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n\n    return suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar defaultDropAlign = {\n  top: 'bottom',\n  left: 'left'\n};\nvar defaultMessages = {\n  enterSelect: '(Press Enter to Select)',\n  suggestionsCount: 'suggestions available',\n  suggestionsExist: 'This input has suggestions use arrow keys to navigate',\n  suggestionIsOpen: 'Suggestions drop is open, continue to use arrow keys to navigate'\n};\nvar TextInput = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var a11yTitle = _ref.a11yTitle,\n      defaultValue = _ref.defaultValue,\n      _ref$dropAlign = _ref.dropAlign,\n      dropAlign = _ref$dropAlign === void 0 ? defaultDropAlign : _ref$dropAlign,\n      dropHeight = _ref.dropHeight,\n      dropTarget = _ref.dropTarget,\n      dropProps = _ref.dropProps,\n      icon = _ref.icon,\n      id = _ref.id,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? defaultMessages : _ref$messages,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      onKeyDown = _ref.onKeyDown,\n      onSelect = _ref.onSelect,\n      onSuggestionSelect = _ref.onSuggestionSelect,\n      onSuggestionsClose = _ref.onSuggestionsClose,\n      onSuggestionsOpen = _ref.onSuggestionsOpen,\n      placeholder = _ref.placeholder,\n      plain = _ref.plain,\n      readOnly = _ref.readOnly,\n      reverse = _ref.reverse,\n      suggestions = _ref.suggestions,\n      textAlign = _ref.textAlign,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"a11yTitle\", \"defaultValue\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"icon\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"readOnly\", \"reverse\", \"suggestions\", \"textAlign\", \"value\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useForwardedRef(ref);\n  var dropRef = useRef();\n  var suggestionsRef = useRef();\n  var suggestionRefs = {}; // if this is a readOnly property, don't set a name with the form context\n  // this allows Select to control the form context for the name.\n\n  var _formContext$useFormI = formContext.useFormInput(readOnly ? undefined : name, valueProp),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(),\n      showDrop = _useState2[0],\n      setShowDrop = _useState2[1];\n\n  var handleSuggestionSelect = useMemo(function () {\n    return onSelect && !onSuggestionSelect ? onSelect : onSuggestionSelect;\n  }, [onSelect, onSuggestionSelect]);\n  var handleTextSelect = useMemo(function () {\n    return onSelect && onSuggestionSelect ? onSelect : undefined;\n  }, [onSelect, onSuggestionSelect]); // if we have no suggestions, close drop if it's open\n\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      setShowDrop(false);\n      if (onSuggestionsClose) onSuggestionsClose();\n    }\n  }, [onSuggestionsClose, showDrop, suggestions]); // If we have suggestions and focus, open drop if it's closed.\n  // This can occur when suggestions are tied to the value.\n  // We don't want focus or showDrop in the dependencies because we\n  // don't want to open the drop just because Esc close it.\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  useEffect(function () {\n    if (focus && !showDrop && suggestions && suggestions.length) {\n      setShowDrop(true);\n      if (onSuggestionsOpen) onSuggestionsOpen();\n    }\n  }, [onSuggestionsOpen, suggestions]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  var _useState3 = useState(-1),\n      activeSuggestionIndex = _useState3[0],\n      setActiveSuggestionIndex = _useState3[1]; // reset activeSuggestionIndex when the drop is closed\n\n\n  useEffect(function () {\n    if (activeSuggestionIndex !== -1 && !showDrop) {\n      setActiveSuggestionIndex(-1);\n    }\n  }, [activeSuggestionIndex, showDrop]); // announce active suggestion\n\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + messages.enterSelect);\n    }\n  }, [activeSuggestionIndex, announce, messages, suggestions]);\n\n  var _useState4 = useState(-1),\n      selectedSuggestionIndex = _useState4[0],\n      setSelectedSuggestionIndex = _useState4[1]; // set selectedSuggestionIndex based on value and current suggestions\n\n\n  useEffect(function () {\n    if (suggestions) {\n      var suggestionValues = suggestions.map(function (suggestion) {\n        return typeof suggestion === 'object' ? suggestion.value : suggestion;\n      });\n      setSelectedSuggestionIndex(suggestionValues.indexOf(value));\n    } else setSelectedSuggestionIndex(-1);\n  }, [suggestions, value]); // make sure activeSuggestion remains visible in scroll\n\n  useEffect(function () {\n    var buttonNode = suggestionRefs[activeSuggestionIndex];\n    var optionsNode = suggestionsRef.current;\n\n    if (buttonNode && isNodeAfterScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop - (optionsNode.getBoundingClientRect().height - buttonNode.getBoundingClientRect().height));\n    }\n\n    if (buttonNode && isNodeBeforeScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop);\n    }\n  }, [activeSuggestionIndex, suggestionRefs]);\n  var openDrop = useCallback(function () {\n    setShowDrop(true);\n    announce(messages.suggestionIsOpen);\n    announce(suggestions.length + \" \" + messages.suggestionsCount);\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  }, [announce, messages.suggestionsCount, messages.suggestionIsOpen, onSuggestionsOpen, suggestions]);\n  var closeDrop = useCallback(function () {\n    setShowDrop(false);\n    if (messages.onSuggestionsClose) onSuggestionsClose();\n    if (onSuggestionsClose) onSuggestionsClose();\n  }, [messages.onSuggestionsClose, onSuggestionsClose]);\n\n  var onNextSuggestion = function onNextSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var onPreviousSuggestion = function onPreviousSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var showStyledPlaceholder = placeholder && typeof placeholder !== 'string' && !(inputRef.current && inputRef.current.value);\n  var drop;\n  var extraProps = {\n    onSelect: handleTextSelect\n  };\n\n  if (showDrop) {\n    drop =\n    /*#__PURE__*/\n    // keyboard access needed here in case user clicks\n    // and drags on scroll bar and focus shifts to drop\n    React.createElement(Keyboard, {\n      onDown: function onDown(event) {\n        return onNextSuggestion(event);\n      },\n      onUp: function onUp(event) {\n        return onPreviousSuggestion(event);\n      },\n      onEnter: function onEnter(event) {\n        // we stole the focus, give it back\n        inputRef.current.focus();\n        closeDrop();\n\n        if (handleSuggestionSelect) {\n          var adjustedEvent = event;\n          adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n          handleSuggestionSelect(adjustedEvent);\n        }\n\n        setValue(suggestions[activeSuggestionIndex]);\n      }\n    }, /*#__PURE__*/React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || inputRef.current,\n      onClickOutside: closeDrop,\n      onEsc: closeDrop\n    }, dropProps), /*#__PURE__*/React.createElement(ContainerBox, {\n      ref: suggestionsRef,\n      overflow: \"auto\",\n      dropHeight: dropHeight\n    }, /*#__PURE__*/React.createElement(StyledSuggestions, null, /*#__PURE__*/React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step\n    }, function (suggestion, index, itemRef) {\n      // Determine whether the label is done as a child or\n      // as an option Button kind property.\n      var renderedLabel = renderLabel(suggestion);\n      var child;\n      if (typeof renderedLabel !== 'string') // must be an element rendered by suggestions.label\n        child = renderedLabel;else if (!theme.button.option) // don't have theme support, need to layout here\n        child = /*#__PURE__*/React.createElement(Box, {\n          align: \"start\",\n          pad: \"small\"\n        }, renderedLabel); // if we have a child, turn on plain, and hoverIndicator\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index,\n        ref: itemRef\n      }, /*#__PURE__*/React.createElement(Button, {\n        active: activeSuggestionIndex === index || selectedSuggestionIndex === index,\n        ref: function ref(r) {\n          suggestionRefs[index] = r;\n        },\n        fill: true,\n        plain: !child ? undefined : true,\n        align: \"start\",\n        kind: !child ? 'option' : undefined,\n        hoverIndicator: !child ? undefined : 'background',\n        label: !child ? renderedLabel : undefined,\n        onClick: function onClick(event) {\n          // we stole the focus, give it back\n          inputRef.current.focus();\n          closeDrop();\n\n          if (handleSuggestionSelect) {\n            event.persist();\n            var adjustedEvent = event;\n            adjustedEvent.suggestion = suggestion;\n            adjustedEvent.target = inputRef.current;\n            handleSuggestionSelect(adjustedEvent);\n          }\n\n          setValue(suggestion);\n        },\n        onMouseOver: function onMouseOver() {\n          return setActiveSuggestionIndex(index);\n        },\n        onFocus: function onFocus() {\n          return setActiveSuggestionIndex(index);\n        }\n      }, child));\n    })))));\n  }\n\n  return /*#__PURE__*/React.createElement(StyledTextInputContainer, {\n    plain: plain\n  }, showStyledPlaceholder && /*#__PURE__*/React.createElement(StyledPlaceholder, null, placeholder), icon && /*#__PURE__*/React.createElement(StyledIcon, {\n    reverse: reverse,\n    theme: theme\n  }, icon), /*#__PURE__*/React.createElement(Keyboard, {\n    onEnter: function onEnter(event) {\n      closeDrop();\n\n      if (activeSuggestionIndex >= 0 && handleSuggestionSelect) {\n        // prevent submitting forms when choosing a suggestion\n        event.preventDefault();\n        event.persist();\n        var adjustedEvent = event;\n        adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n        adjustedEvent.target = inputRef.current;\n        handleSuggestionSelect(adjustedEvent);\n      }\n    },\n    onEsc: showDrop ? function (event) {\n      closeDrop(); // we have to stop both synthetic events and native events\n      // drop and layer should not close by pressing esc on this\n      // input\n\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    } : undefined,\n    onTab: showDrop ? closeDrop : undefined,\n    onUp: showDrop && suggestions && suggestions.length > 0 && activeSuggestionIndex ? function (event) {\n      onPreviousSuggestion(event);\n    } : undefined,\n    onDown: suggestions && suggestions.length > 0 ? function (event) {\n      if (!showDrop) {\n        openDrop();\n      } else {\n        onNextSuggestion(event);\n      }\n    } : undefined,\n    onKeyDown: onKeyDown\n  }, /*#__PURE__*/React.createElement(StyledTextInput, _extends({\n    \"aria-label\": a11yTitle,\n    ref: inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    icon: icon,\n    reverse: reverse,\n    focus: focus,\n    textAlign: textAlign\n  }, rest, extraProps, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value),\n    readOnly: readOnly,\n    onFocus: function onFocus(event) {\n      setFocus(true);\n\n      if (suggestions && suggestions.length > 0) {\n        announce(messages.suggestionsExist);\n        openDrop();\n      }\n\n      if (_onFocus) _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false);\n      if (_onBlur) _onBlur(event);\n    },\n    onChange: readOnly ? undefined : function (event) {\n      setValue(event.target.value);\n      if (onChange) onChange(event);\n    }\n  }))), drop);\n});\nTextInput.displayName = 'TextInput';\nvar TextInputDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TextInputDoc = require('./doc').doc(TextInput);\n}\n\nvar TextInputWrapper = TextInputDoc || TextInput;\nexport { TextInputWrapper as TextInput };"]},"metadata":{},"sourceType":"module"}