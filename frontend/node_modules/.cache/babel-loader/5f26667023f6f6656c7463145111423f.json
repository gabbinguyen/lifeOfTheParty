{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nexport var doc = function doc(Tip) {\n  var DocumentedTip = describe(Tip).availableAt(getAvailableAtBadge('Tip', 'Controls')).description(\"Tooltip or a hint when hovering over an element. The tooltip will render \\n      when hovering on top of the Tip's child node or string.\").usage(\"import { Tip } from 'grommet';\\n<Tip />\");\n  DocumentedTip.propTypes = {\n    content: PropTypes.node.description(\"The tooltip content inside the drop.\"),\n    dropProps: PropTypes.object.description('Any valid Drop prop to style the Tip drop container.').defaultValue({\n      plain: true,\n      trapFocus: false\n    }),\n    plain: PropTypes.bool.description(\"Whether content should have default styling.\").defaultValue(undefined)\n  };\n  return DocumentedTip;\n};\nexport var themeDoc = {\n  'tip.content': {\n    description: 'Any valid Box property for the Tip container.',\n    type: 'object',\n    defaultValue: \"{ background: 'background-contrast', elevation: 'small', \\n    margin: 'xsmall', pad: { vertical: 'xsmall', horizontal: 'small' }, \\n    round: 'small'}\"\n  },\n  'tip.drop': {\n    description: 'Any valid Drop property for the Tooltip.',\n    type: 'object',\n    defaultValue: \"{align: { top: 'bottom' }}\"\n  }\n};","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/node_modules/grommet/es6/components/Tip/doc.js"],"names":["describe","PropTypes","getAvailableAtBadge","doc","Tip","DocumentedTip","availableAt","description","usage","propTypes","content","node","dropProps","object","defaultValue","plain","trapFocus","bool","undefined","themeDoc","type"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,GAAb,EAAkB;AACjC,MAAIC,aAAa,GAAGL,QAAQ,CAACI,GAAD,CAAR,CAAcE,WAAd,CAA0BJ,mBAAmB,CAAC,KAAD,EAAQ,UAAR,CAA7C,EAAkEK,WAAlE,CAA8E,0IAA9E,EAA0NC,KAA1N,CAAgO,yCAAhO,CAApB;AACAH,EAAAA,aAAa,CAACI,SAAd,GAA0B;AACxBC,IAAAA,OAAO,EAAET,SAAS,CAACU,IAAV,CAAeJ,WAAf,CAA2B,sCAA3B,CADe;AAExBK,IAAAA,SAAS,EAAEX,SAAS,CAACY,MAAV,CAAiBN,WAAjB,CAA6B,sDAA7B,EAAqFO,YAArF,CAAkG;AAC3GC,MAAAA,KAAK,EAAE,IADoG;AAE3GC,MAAAA,SAAS,EAAE;AAFgG,KAAlG,CAFa;AAMxBD,IAAAA,KAAK,EAAEd,SAAS,CAACgB,IAAV,CAAeV,WAAf,CAA2B,8CAA3B,EAA2EO,YAA3E,CAAwFI,SAAxF;AANiB,GAA1B;AAQA,SAAOb,aAAP;AACD,CAXM;AAYP,OAAO,IAAIc,QAAQ,GAAG;AACpB,iBAAe;AACbZ,IAAAA,WAAW,EAAE,+CADA;AAEba,IAAAA,IAAI,EAAE,QAFO;AAGbN,IAAAA,YAAY,EAAE;AAHD,GADK;AAMpB,cAAY;AACVP,IAAAA,WAAW,EAAE,0CADH;AAEVa,IAAAA,IAAI,EAAE,QAFI;AAGVN,IAAAA,YAAY,EAAE;AAHJ;AANQ,CAAf","sourcesContent":["import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils/mixins';\nexport var doc = function doc(Tip) {\n  var DocumentedTip = describe(Tip).availableAt(getAvailableAtBadge('Tip', 'Controls')).description(\"Tooltip or a hint when hovering over an element. The tooltip will render \\n      when hovering on top of the Tip's child node or string.\").usage(\"import { Tip } from 'grommet';\\n<Tip />\");\n  DocumentedTip.propTypes = {\n    content: PropTypes.node.description(\"The tooltip content inside the drop.\"),\n    dropProps: PropTypes.object.description('Any valid Drop prop to style the Tip drop container.').defaultValue({\n      plain: true,\n      trapFocus: false\n    }),\n    plain: PropTypes.bool.description(\"Whether content should have default styling.\").defaultValue(undefined)\n  };\n  return DocumentedTip;\n};\nexport var themeDoc = {\n  'tip.content': {\n    description: 'Any valid Box property for the Tip container.',\n    type: 'object',\n    defaultValue: \"{ background: 'background-contrast', elevation: 'small', \\n    margin: 'xsmall', pad: { vertical: 'xsmall', horizontal: 'small' }, \\n    round: 'small'}\"\n  },\n  'tip.drop': {\n    description: 'Any valid Drop property for the Tooltip.',\n    type: 'object',\n    defaultValue: \"{align: { top: 'bottom' }}\"\n  }\n};"]},"metadata":{},"sourceType":"module"}