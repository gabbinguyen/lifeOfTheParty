{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/EventContainer.js\";\nimport React, { Component } from 'react';\nimport EventCard from './EventCard';\nimport { Button, Card, Row, Col } from 'react-bootstrap';\nlet eventsURL = 'http://localhost:3000/events/';\nexport default class EventContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: []\n    };\n\n    this.newAccomHandler = data => {\n      this.setState({\n        events: [...this.state.events, data]\n      }); // console.log(this.state.events)\n    };\n\n    this.handleDelete = event => {\n      fetch(`http://localhost:3000/events/${event.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        }\n      });\n      let array = this.state.events;\n      let i = array.indexOf(event);\n\n      if (i > -1) {\n        array.splice(i, 1);\n      }\n\n      this.setState({\n        events: array\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(eventsURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Auth-Key': localStorage.getItem('auth_key')\n      }\n    }).then(res => res.json()).then(events => {\n      this.setState({\n        events\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.events !== prevProps.userID) {\n      this.fetchData(this.props.userID);\n    }\n  }\n\n  render() {\n    console.log(this.state.events);\n    const myEvents = this.state.events.map(event => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(EventCard, {\n        event: event,\n        name: event.name,\n        date: event.date,\n        collaborators: event.collaborators // flicollab={event.flights.map(flight=>flight.collaborator.user.name)}\n        ,\n        activities: event.activities,\n        accommodations: event.accommodations,\n        expenses: event.expenses,\n        flights: event.flights,\n        location: event.location,\n        handleDelete: this.handleDelete,\n        newAccom: this.newAccomHandler,\n        handleEditEvent: this.handleEditEvent\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: myEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/EventContainer.js"],"names":["React","Component","EventCard","Button","Card","Row","Col","eventsURL","EventContainer","state","events","newAccomHandler","data","setState","handleDelete","event","fetch","id","method","headers","localStorage","getItem","array","i","indexOf","splice","componentDidMount","then","res","json","componentDidUpdate","prevProps","props","userID","fetchData","render","console","log","myEvents","map","name","date","collaborators","activities","accommodations","expenses","flights","location","handleEditEvent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport EventCard from './EventCard'\nimport {Button, Card, Row, Col} from 'react-bootstrap'\n\nlet eventsURL = 'http://localhost:3000/events/'\n\nexport default class EventContainer extends Component {\n    state={\n        events: []\n    }\n\n    componentDidMount(){\n        fetch(eventsURL, {\n            method:'GET',\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            }\n        })\n        .then(res => res.json())\n        .then(events => {\n            this.setState({events})\n        })\n    }\n\n\n    newAccomHandler = (data) => {\n        this.setState({events: [...this.state.events, data]})\n        // console.log(this.state.events)\n    }\n\n\n    handleDelete = (event) => {\n        fetch(`http://localhost:3000/events/${event.id}`, {\n            method: 'DELETE',\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            }\n        })\n        let array = this.state.events;\n        \n        let i = array.indexOf(event);\n            if (i > -1) {\n                array.splice(i, 1);\n            }\n        this.setState({\n            events: array\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.events !== prevProps.userID) {\n          this.fetchData(this.props.userID);\n        }\n      }\n    \n\n    render() {\n        console.log(this.state.events)\n\n        const myEvents = this.state.events.map(event => \n            <Card > \n                <EventCard \n                    key={event.id}\n                    event={event}\n                    name={event.name} \n                    date={event.date}\n                    collaborators={event.collaborators} \n                    // flicollab={event.flights.map(flight=>flight.collaborator.user.name)}\n                    activities={event.activities}\n                    accommodations={event.accommodations}\n                    expenses={event.expenses}\n                    flights={event.flights}\n                    location={event.location}\n                    handleDelete={this.handleDelete}\n                    newAccom={this.newAccomHandler}\n                    handleEditEvent={this.handleEditEvent}\n                    />\n            </Card> \n            )\n\n        return (\n            <div>\n                {myEvents}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}