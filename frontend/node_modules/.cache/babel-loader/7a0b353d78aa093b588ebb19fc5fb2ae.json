{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewEvent.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nexport default class NewEvent extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newEvent = {\n        name: this.state.name,\n        date: this.state.date,\n        location: this.state.location\n      };\n      fetch(\"http://localhost:3000/events\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        },\n        body: JSON.stringify(newEvent)\n      }).then(res => res.json()).then(event => {\n        this.props.history.push('/dashboard');\n      });\n      this.createCollaborator();\n    };\n\n    this.state = {\n      name: '',\n      date: '',\n      location: ''\n    };\n  }\n\n  createCollaborator() {// console.log(newEvent)\n    // console.log(newEvent.user)\n    // const newCollab = {\n    //     event_id: newEvent.id,\n    //     user_id: newEvent.user \n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: this.state.name,\n          placeholder: \"Type of Event\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 131\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"date\",\n          value: this.state.date,\n          placeholder: \"Date\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 122\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          value: this.state.location,\n          placeholder: \"Location\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 134\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          \"text-align\": \"center\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewEvent.js"],"names":["React","Component","Button","NewEvent","constructor","handleChange","e","name","value","target","setState","handleSubmit","preventDefault","newEvent","state","date","location","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","event","props","history","push","createCollaborator","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,iBAArB;AAGA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,WAAW,GAAE;AACT;;AADS,SASbC,YATa,GASCC,CAAD,IAAM;AACf,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBF,CAAC,CAACG,MAAxB;AACA,WAAKC,QAAL,CAAc;AACV,SAACH,IAAD,GAAQC;AADE,OAAd;AAGH,KAdY;;AAAA,SAiBbG,YAjBa,GAiBCL,CAAD,IAAK;AACdA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,QAAQ,GAAC;AACXN,QAAAA,IAAI,EAAE,KAAKO,KAAL,CAAWP,IADN;AAEXQ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFN;AAGXC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAHV,OAAf;AAKAC,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,QAAAA,MAAM,EAAE,MAD0B;AAElCC,QAAAA,OAAO,EAAC;AACJ,0BAAgB,kBADZ;AAEJ,sBAAYC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFR,SAF0B;AAMlCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;AAN4B,OAAjC,CAAL,CAQCY,IARD,CAQMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EARX,EASCF,IATD,CASMG,KAAK,IAAE;AAAC,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AAAsC,OATpD;AAUA,WAAKC,kBAAL;AACH,KAnCY;;AAET,SAAKlB,KAAL,GAAa;AACTP,MAAAA,IAAI,EAAE,EADG;AAETQ,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AA8BDgB,EAAAA,kBAAkB,GAAG,CACjB;AACA;AACA;AACA;AACA;AACA;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAE,KAAKtB,YAArB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,KAAK,EAAE,KAAKG,KAAL,CAAWP,IAAjD;AAAuD,UAAA,WAAW,EAAE,eAApE;AAAoF,UAAA,QAAQ,EAAE,KAAKF;AAAnG;AAAA;AAAA;AAAA;AAAA,gBADJ,eACsH;AAAA;AAAA;AAAA;AAAA,gBADtH,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAA+B,UAAA,KAAK,EAAE,KAAKS,KAAL,CAAWC,IAAjD;AAAuD,UAAA,WAAW,EAAE,MAApE;AAA2E,UAAA,QAAQ,EAAE,KAAKV;AAA1F;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAE6G;AAAA;AAAA;AAAA;AAAA,gBAF7G,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAE,KAAKS,KAAL,CAAWE,QAArD;AAA+D,UAAA,WAAW,EAAE,UAA5E;AAAuF,UAAA,QAAQ,EAAE,KAAKX;AAAtG;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAGyH;AAAA;AAAA;AAAA;AAAA,gBAHzH,eAII,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,wBAAW,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA3D2C","sourcesContent":["import React, { Component } from 'react'\nimport {Button} from 'react-bootstrap'\n\n\nexport default class NewEvent extends Component {\n    constructor(){\n        super()\n        this.state = {\n            name: '',\n            date: '',\n            location: ''\n        }\n    }\n\n    handleChange=(e)=> {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const newEvent={\n            name: this.state.name,\n            date: this.state.date,\n            location: this.state.location\n        }\n        fetch(\"http://localhost:3000/events\", {\n            method: \"POST\",\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            },\n            body: JSON.stringify(newEvent)\n        })\n        .then(res=>res.json())\n        .then(event=>{this.props.history.push('/dashboard')})\n        this.createCollaborator()\n    }\n\n    createCollaborator() {\n        // console.log(newEvent)\n        // console.log(newEvent.user)\n        // const newCollab = {\n        //     event_id: newEvent.id,\n        //     user_id: newEvent.user \n        // }\n    }\n    \n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name=\"name\" value={this.state.name} placeholder =\"Type of Event\" onChange={this.handleChange}/><br></br>        \n                <input type=\"text\" name=\"date\" value={this.state.date} placeholder= \"Date\" onChange={this.handleChange}/><br></br>\n                <input type=\"text\" name=\"location\" value={this.state.location} placeholder= \"Location\" onChange={this.handleChange}/><br></br>\n                <Button type=\"submit\" text-align=\"center\">Submit</Button>\n            </form>            \n        </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}