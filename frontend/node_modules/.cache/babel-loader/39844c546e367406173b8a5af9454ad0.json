{"ast":null,"code":"import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n  li: 'e-list-item',\n  ul: 'e-list-parent e-ul',\n  group: 'e-list-group-item',\n  icon: 'e-list-icon',\n  text: 'e-list-text',\n  check: 'e-list-check',\n  checked: 'e-checked',\n  selected: 'e-selected',\n  expanded: 'e-expanded',\n  textContent: 'e-text-content',\n  hasChild: 'e-has-child',\n  level: 'e-level',\n  url: 'e-list-url',\n  collapsible: 'e-icon-collapsible',\n  disabled: 'e-disabled',\n  image: 'e-list-img',\n  iconWrapper: 'e-icon-wrapper',\n  anchorWrap: 'e-anchor-wrap',\n  navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\n\nexport var ListBase;\n\n(function (ListBase) {\n  /**\n   * Default mapped fields.\n   */\n  ListBase.defaultMappedFields = {\n    id: 'id',\n    text: 'text',\n    url: 'url',\n    value: 'value',\n    isChecked: 'isChecked',\n    enabled: 'enabled',\n    expanded: 'expanded',\n    selected: 'selected',\n    iconCss: 'iconCss',\n    child: 'child',\n    isVisible: 'isVisible',\n    hasChildren: 'hasChildren',\n    tooltip: 'tooltip',\n    htmlAttributes: 'htmlAttributes',\n    urlAttributes: 'urlAttributes',\n    imageAttributes: 'imageAttributes',\n    imageUrl: 'imageUrl',\n    groupBy: null\n  };\n  var defaultAriaAttributes = {\n    level: 1,\n    listRole: 'presentation',\n    itemRole: 'presentation',\n    groupItemRole: 'group',\n    itemText: 'list-item',\n    wrapperRole: 'presentation'\n  };\n  var defaultListBaseOptions = {\n    showCheckBox: false,\n    showIcon: false,\n    enableHtmlSanitizer: false,\n    expandCollapse: false,\n    fields: ListBase.defaultMappedFields,\n    ariaAttributes: defaultAriaAttributes,\n    listClass: '',\n    itemClass: '',\n    processSubChild: false,\n    sortOrder: 'None',\n    template: null,\n    groupTemplate: null,\n    headerTemplate: null,\n    expandIconClass: 'e-icon-collapsible',\n    moduleName: 'list',\n    expandIconPosition: 'Right',\n    itemNavigable: false\n  };\n  /**\n   * Function helps to created and return the UL Li element based on your data.\n   * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n\n  function createList(createElement, dataSource, // tslint:disable-next-line\n  options, isSingleLevel, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var type = typeofData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number') {\n      return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n    } else {\n      // tslint:disable-next-line\n      return createListFromJson(createElement, dataSource, options, // tslint:disable-next-line\n      ariaAttributes.level, isSingleLevel, componentInstance);\n    }\n  }\n\n  ListBase.createList = createList;\n  /**\n   * Function helps to created an element list based on string array input .\n   * @param  {string[]} dataSource - Specifies an array of string data\n   */\n\n  function createListFromArray(createElement, dataSource, // tslint:disable-next-line\n  isSingleLevel, options, componentInstance) {\n    var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n    return generateUL(createElement, subChild, null, options);\n  }\n\n  ListBase.createListFromArray = createListFromArray;\n  /**\n   * Function helps to created an element list based on string array input .\n   * @param  {string[]} dataSource - Specifies an array of string data\n   */\n\n  function createListItemFromArray(createElement, dataSource, // tslint:disable-next-line\n  isSingleLevel, options, componentInstance) {\n    var subChild = [];\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      var li = void 0;\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          options: curOpt\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (isSingleLevel) {\n        li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n      } else {\n        li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: dataSource[i],\n          item: li,\n          options: curOpt\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      subChild.push(li);\n    }\n\n    return subChild;\n  }\n\n  ListBase.createListItemFromArray = createListItemFromArray;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n  // tslint:disable-next-line:max-func-body-length\n  // tslint:disable-next-line\n\n  function createListItemFromJson(createElement, dataSource, // tslint:disable-next-line\n  options, level, isSingleLevel, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var id;\n    var checkboxElement = [];\n\n    if (level) {\n      ariaAttributes.level = level;\n    }\n\n    var child = [];\n    var li;\n    var anchorElement;\n\n    if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) && !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n      id = generateId(); // generate id for drop-down-list option.\n    }\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], fields);\n\n      if (isNullOrUndefined(dataSource[i])) {\n        continue;\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      var curItem = dataSource[i];\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], fields);\n      }\n\n      if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n        id = fieldData[fields.id];\n      }\n\n      var innerEle = [];\n\n      if (curOpt.showCheckBox) {\n        if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n          checkboxElement.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        } else {\n          innerEle.push(createElement('input', {\n            className: cssClass.check,\n            attrs: {\n              type: 'checkbox'\n            }\n          }));\n        }\n      }\n\n      if (isSingleLevel === true) {\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n          innerEle.push(createElement('span', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          }));\n        }\n\n        li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, curItem.hasOwnProperty('isHeader') && curItem.isHeader ? true : false, id, i, options);\n        anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n      } else {\n        li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n        li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n        li.setAttribute('aria-level', ariaAttributes.level.toString());\n        anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n\n        if (fieldData.hasOwnProperty(fields.tooltip)) {\n          li.setAttribute('title', fieldData[fields.tooltip]);\n        }\n\n        if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n          setAttribute(li, fieldData[fields.htmlAttributes]);\n        }\n\n        if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n          li.classList.add(cssClass.disabled);\n        }\n\n        if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n          li.style.display = 'none';\n        }\n\n        if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl]) && !curOpt.template) {\n          var attr = {\n            src: fieldData[fields.imageUrl]\n          };\n          merge(attr, fieldData[fields.imageAttributes]);\n          var imageElemnt = createElement('img', {\n            className: cssClass.image,\n            attrs: attr\n          });\n\n          if (anchorElement) {\n            anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n          } else {\n            prepend([imageElemnt], li.firstElementChild);\n          }\n        }\n\n        if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n          var iconElement = void 0;\n          iconElement = createElement('div', {\n            className: cssClass.icon + ' ' + fieldData[fields.iconCss]\n          });\n\n          if (anchorElement) {\n            anchorElement.insertAdjacentElement('afterbegin', iconElement);\n          } else {\n            prepend([iconElement], li.firstElementChild);\n          }\n        }\n\n        if (innerEle.length) {\n          prepend(innerEle, li.firstElementChild);\n        }\n\n        if (curOpt.itemNavigable && checkboxElement.length) {\n          prepend(checkboxElement, li.firstElementChild);\n        }\n\n        processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n      }\n\n      if (anchorElement) {\n        addClass([li], [cssClass.navigable]);\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: dataSource[i],\n          text: fieldData[fields.text],\n          item: li,\n          options: curOpt,\n          fields: fields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      checkboxElement = [];\n      child.push(li);\n    }\n\n    return child;\n  }\n\n  ListBase.createListItemFromJson = createListItemFromJson;\n  /**\n   * Function helps to created an element list based on array of JSON input .\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n   * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n   */\n\n  function createListFromJson(createElement, dataSource, // tslint:disable-next-line\n  options, level, isSingleLevel, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n    return generateUL(createElement, li, curOpt.listClass, options);\n  }\n\n  ListBase.createListFromJson = createListFromJson;\n  /**\n   * Return the next or previous visible element.\n   * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n   * @param  {Element} li - An element to find next or previous after this element.\n   * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n   */\n\n  function getSiblingLI(elementArray, element, isPrevious) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n\n    if (!elementArray || !elementArray.length) {\n      return void 0;\n    }\n\n    var siblingLI;\n    var liIndex;\n    var liCollections = Array.prototype.slice.call(elementArray);\n\n    if (element) {\n      liIndex = indexOf(element, liCollections);\n    } else {\n      liIndex = isPrevious === true ? liCollections.length : -1;\n    }\n\n    siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n\n    while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n      liIndex = liIndex + (isPrevious === true ? -1 : 1);\n      siblingLI = liCollections[liIndex];\n    }\n\n    return siblingLI;\n  }\n\n  ListBase.getSiblingLI = getSiblingLI;\n  /**\n   * Return the index of the li element\n   * @param  {Element} item - An element to find next or previous after this element.\n   * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n   */\n\n  function indexOf(item, elementArray) {\n    if (!elementArray || !item) {\n      return void 0;\n    } else {\n      var liCollections = elementArray;\n      liCollections = Array.prototype.slice.call(elementArray);\n      return liCollections.indexOf(item);\n    }\n  }\n\n  ListBase.indexOf = indexOf;\n  /**\n   * Returns the grouped data from given dataSource.\n   * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n   * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n   * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n   */\n\n  function groupDataSource(dataSource, fields, sortOrder) {\n    if (sortOrder === void 0) {\n      sortOrder = 'None';\n    }\n\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var cusQuery = new Query().group(curFields.groupBy); // need to remove once sorting issues fixed in DataManager\n\n    cusQuery = addSorting(sortOrder, 'key', cusQuery);\n    var ds = getDataSource(dataSource, cusQuery);\n    dataSource = [];\n\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[j].items;\n      var grpItem = {};\n      var hdr = 'isHeader';\n      grpItem[curFields.text] = ds[j].key;\n      grpItem[hdr] = true;\n      var newtext = curFields.text;\n\n      if (newtext === 'id') {\n        newtext = 'text';\n        grpItem[newtext] = ds[j].key;\n      }\n\n      grpItem._id = 'group-list-item-' + (ds[j].key ? ds[j].key.toString().trim() : 'undefined');\n      grpItem.items = itemObj;\n      dataSource.push(grpItem);\n\n      for (var k = 0; k < itemObj.length; k++) {\n        dataSource.push(itemObj[k]);\n      }\n    }\n\n    return dataSource;\n  }\n\n  ListBase.groupDataSource = groupDataSource;\n  /**\n   * Returns a sorted query object.\n   * @param  {SortOrder} sortOrder - Specifies that sort order.\n   * @param  {string} sortBy - Specifies sortBy fields.\n   * @param  {Query=new Query()} query - Pass if any existing query.\n   */\n\n  function addSorting(sortOrder, sortBy, query) {\n    if (query === void 0) {\n      query = new Query();\n    }\n\n    if (sortOrder === 'Ascending') {\n      query.sortBy(sortBy, 'ascending', true);\n    } else if (sortOrder === 'Descending') {\n      query.sortBy(sortBy, 'descending', true);\n    } else {\n      for (var i = 0; i < query.queries.length; i++) {\n        if (query.queries[i].fn === 'onSortBy') {\n          query.queries.splice(i, 1);\n        }\n      }\n    }\n\n    return query;\n  }\n\n  ListBase.addSorting = addSorting;\n  /**\n   * Return an array of JSON Data that processed based on queries.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {Query} query - Specifies query that need to process.\n   */\n\n  function getDataSource(dataSource, query) {\n    // tslint:disable-next-line\n    return new DataManager(dataSource).executeLocal(query);\n  }\n\n  ListBase.getDataSource = getDataSource;\n  /**\n   * Created JSON data based the UL and LI element\n   * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n  function createJsonFromElement(element, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n    var curEle = element.cloneNode(true);\n    var jsonAr = [];\n    curEle.classList.add('json-parent');\n    var childs = curEle.querySelectorAll('.json-parent>li');\n    curEle.classList.remove('json-parent');\n\n    for (var i = 0; i < childs.length; i++) {\n      var li = childs[i];\n      var anchor = li.querySelector('a');\n      var ul = li.querySelector('ul');\n      var json = {};\n      var childNodes = anchor ? anchor.childNodes : li.childNodes;\n      var keys = Object.keys(childNodes);\n\n      for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n        if (!childNodes[Number(keys[i_1])].hasChildNodes()) {\n          json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n        }\n      }\n\n      var attributes_1 = getAllAttributes(li);\n\n      if (attributes_1.id) {\n        json[fields.id] = attributes_1.id;\n        delete attributes_1.id;\n      } else {\n        json[fields.id] = generateId();\n      }\n\n      if (Object.keys(attributes_1).length) {\n        json[fields.htmlAttributes] = attributes_1;\n      }\n\n      if (anchor) {\n        attributes_1 = getAllAttributes(anchor);\n\n        if (Object.keys(attributes_1).length) {\n          json[fields.urlAttributes] = attributes_1;\n        }\n      }\n\n      if (ul) {\n        json[fields.child] = createJsonFromElement(ul, options);\n      }\n\n      jsonAr.push(json);\n    }\n\n    return jsonAr;\n  }\n\n  ListBase.createJsonFromElement = createJsonFromElement;\n\n  function typeofData(data) {\n    var match = {\n      typeof: null,\n      item: null\n    };\n\n    for (var i = 0; i < data.length; i++) {\n      if (!isNullOrUndefined(data[i])) {\n        return match = {\n          typeof: typeof data[i],\n          item: data[i]\n        };\n      }\n    }\n\n    return match;\n  }\n\n  function setAttribute(element, elementAttributes) {\n    var attr = {};\n    merge(attr, elementAttributes);\n\n    if (attr.class) {\n      addClass([element], attr.class.split(' '));\n      delete attr.class;\n    }\n\n    attributes(element, attr);\n  }\n\n  function getAllAttributes(element) {\n    var attributes = {};\n    var attr = element.attributes;\n\n    for (var index = 0; index < attr.length; index++) {\n      attributes[attr[index].nodeName] = attr[index].nodeValue;\n    }\n\n    return attributes;\n  }\n  /**\n   * Created UL element from content template.\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n   */\n\n\n  function renderContentTemplate(createElement, template, dataSource, // tslint:disable-next-line\n  fields, options, componentInstance) {\n    cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul,\n      attrs: {\n        role: 'presentation'\n      }\n    });\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var compiledString = compile(template);\n    var liCollection = [];\n    var value;\n    var id = generateId(); // generate id for drop-down-list option.\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var fieldData = getFieldValues(dataSource[i], curFields);\n      var curItem = dataSource[i];\n      var isHeader = curItem.isHeader;\n\n      if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n        value = curItem;\n      } else {\n        value = fieldData[curFields.value];\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreating(curData);\n      }\n\n      if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n        fieldData = getFieldValues(dataSource[i], curFields);\n\n        if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n          value = curItem;\n        } else {\n          value = fieldData[curFields.value];\n        }\n      }\n\n      var li = createElement('li', {\n        id: id + '-' + i,\n        className: isHeader ? cssClass.group : cssClass.li,\n        attrs: {\n          role: 'presentation'\n        }\n      });\n\n      if (isHeader) {\n        if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n          li.innerText = curItem;\n        } else {\n          li.innerText = fieldData[curFields.text];\n        }\n      } else {\n        var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n\n        if (isHeader) {\n          append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n        } else {\n          append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n        }\n\n        li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n        li.setAttribute('role', 'option');\n      }\n\n      if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n        var curData = {\n          dataSource: dataSource,\n          curData: curItem,\n          text: value,\n          item: li,\n          options: curOpt,\n          fields: curFields\n        };\n        curOpt.itemCreated(curData);\n      }\n\n      liCollection.push(li);\n    }\n\n    append(liCollection, ulElement);\n    return ulElement;\n  }\n\n  ListBase.renderContentTemplate = renderContentTemplate;\n  /**\n   * Created header items from group template.\n   * @param  {string} template - that need to convert and generate li element.\n   * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n   * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n   * @param  {Element[]} headerItems? - Specifies listbase header items.\n   */\n  // tslint:disable-next-line\n\n  function renderGroupTemplate(groupTemplate, groupDataSource, fields, // tslint:disable-next-line\n  headerItems, options, componentInstance) {\n    var compiledString = compile(groupTemplate);\n    var curFields = extend({}, ListBase.defaultMappedFields, fields);\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var category = curFields.groupBy;\n\n    for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n      var header = headerItems_1[_i];\n      var headerData = {};\n      headerData[category] = header.textContent;\n      header.innerHTML = '';\n      append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n    }\n\n    return headerItems;\n  }\n\n  ListBase.renderGroupTemplate = renderGroupTemplate;\n\n  function generateId() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  ListBase.generateId = generateId;\n\n  function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n    // Get SubList\n    var subDS = fieldData[fields.child] || [];\n    var hasChildren = fieldData[fields.hasChildren]; //Create Sub child\n\n    if (subDS.length) {\n      hasChildren = true;\n      element.classList.add(cssClass.hasChild);\n\n      if (options.processSubChild) {\n        var subLi = createListFromJson(createElement, subDS, options, ++level);\n        element.appendChild(subLi);\n      }\n    } // Create expand and collapse node\n\n\n    if (!!options.expandCollapse && hasChildren && !options.template) {\n      element.firstElementChild.classList.add(cssClass.iconWrapper);\n      var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n      expandElement([createElement('div', {\n        className: 'e-icons ' + options.expandIconClass\n      })], element.querySelector('.' + cssClass.textContent));\n    }\n  }\n\n  function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var value = item;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n      dataSource = item;\n      text = typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number' ? fieldData[fields.text] : fieldData[fields.text] || '';\n      value = fieldData[fields.value];\n    }\n\n    var elementID;\n\n    if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id]) && fieldData[fields.id] !== '') {\n      elementID = id;\n    } else {\n      elementID = id + '-' + index;\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      id: elementID,\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n\n    if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n      li.classList.add(cssClass.disabled);\n    }\n\n    if (grpLI) {\n      li.innerText = text;\n    } else {\n      li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n      li.setAttribute('role', 'option');\n\n      if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n        setAttribute(li, fieldData[fields.htmlAttributes]);\n      }\n\n      if (innerElements.length && !curOpt.itemNavigable) {\n        append(innerElements, li);\n      }\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n      } else {\n        if (innerElements.length && curOpt.itemNavigable) {\n          append(innerElements, li);\n        }\n\n        li.appendChild(document.createTextNode(text));\n      }\n    }\n\n    return li;\n  }\n\n  function getModuleClass(moduleName) {\n    var moduleClass;\n    return moduleClass = {\n      li: \"e-\" + moduleName + \"-item\",\n      ul: \"e-\" + moduleName + \"-parent e-ul\",\n      group: \"e-\" + moduleName + \"-group-item\",\n      icon: \"e-\" + moduleName + \"-icon\",\n      text: \"e-\" + moduleName + \"-text\",\n      check: \"e-\" + moduleName + \"-check\",\n      checked: 'e-checked',\n      selected: 'e-selected',\n      expanded: 'e-expanded',\n      textContent: 'e-text-content',\n      hasChild: 'e-has-child',\n      level: 'e-level',\n      url: \"e-\" + moduleName + \"-url\",\n      collapsible: 'e-icon-collapsible',\n      disabled: 'e-disabled',\n      image: \"e-\" + moduleName + \"-img\",\n      iconWrapper: 'e-icon-wrapper',\n      anchorWrap: 'e-anchor-wrap',\n      navigable: 'e-navigable'\n    };\n  }\n\n  function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n    var fieldData = getFieldValues(dataSource, fields);\n    var attr = {\n      href: fieldData[fields.url]\n    };\n\n    if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n      merge(attr, fieldData[fields.urlAttributes]);\n      attr.href = fieldData[fields.url] ? fieldData[fields.url] : fieldData[fields.urlAttributes].href;\n    }\n\n    var anchorTag;\n\n    if (!isFullNavigation) {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url,\n        innerHTML: text\n      });\n    } else {\n      anchorTag = createElement('a', {\n        className: cssClass.text + ' ' + cssClass.url\n      });\n      var anchorWrapper = createElement('div', {\n        className: cssClass.anchorWrap\n      });\n\n      if (innerElements && innerElements.length) {\n        append(innerElements, anchorWrapper);\n      }\n\n      anchorWrapper.appendChild(document.createTextNode(text));\n      append([anchorWrapper], anchorTag);\n    }\n\n    setAttribute(anchorTag, attr);\n    return anchorTag;\n  } // tslint:disable-next-line\n\n  /* tslint:disable:align */\n\n\n  function generateLI(createElement, item, fieldData, // tslint:disable-next-line\n  fields, className, options, componentInstance) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    var text = item;\n    var uID;\n    var grpLI;\n    var dataSource;\n\n    if (typeof item !== 'string' && typeof item !== 'number') {\n      dataSource = item;\n      text = fieldData[fields.text] || ''; // tslint:disable-next-line\n\n      uID = isNullOrUndefined(fieldData['_id']) ? fieldData[fields.id] : fieldData['_id'];\n      grpLI = item.hasOwnProperty('isHeader') && item.isHeader ? true : false;\n    }\n\n    if (options && options.enableHtmlSanitizer) {\n      text = text;\n    }\n\n    var li = createElement('li', {\n      className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ? {\n        role: grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole\n      } : {}\n    });\n    !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n    var blazId = 'BlazId';\n\n    if (options && !!options.removeBlazorID && typeof item === 'object' && item.hasOwnProperty(blazId)) {\n      delete item[blazId];\n    }\n\n    if (grpLI && options && options.groupTemplate) {\n      var compiledString = compile(options.groupTemplate);\n      append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n    } else if (!grpLI && options && options.template) {\n      var compiledString = compile(options.template);\n      append(compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n    } else {\n      var innerDiv = createElement('div', {\n        className: cssClass.textContent,\n        attrs: ariaAttributes.wrapperRole !== '' ? {\n          role: ariaAttributes.wrapperRole\n        } : {}\n      });\n\n      if (dataSource && (fieldData[fields.url] || fieldData[fields.urlAttributes] && fieldData[fields.urlAttributes].href)) {\n        innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n      } else {\n        var element = createElement('span', {\n          className: cssClass.text,\n          attrs: ariaAttributes.itemText !== '' ? {\n            role: ariaAttributes.itemText\n          } : {}\n        });\n\n        if (options && options.enableHtmlSanitizer) {\n          element.innerText = text;\n        } else {\n          element.innerHTML = text;\n        }\n\n        innerDiv.appendChild(element);\n      }\n\n      li.appendChild(innerDiv);\n    }\n\n    return li;\n  }\n  /**\n   * Returns UL element based on the given LI element.\n   * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n   * @param  {string} className? - Specifies class name that need to be added in UL element.\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n\n  function generateUL(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var ulElement = createElement('ul', {\n      className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n      attrs: ariaAttributes.listRole !== '' ? {\n        role: ariaAttributes.listRole\n      } : {}\n    });\n    append(liElement, ulElement);\n    return ulElement;\n  }\n\n  ListBase.generateUL = generateUL;\n  /**\n   * Returns LI element with additional DIV tag based on the given LI element.\n   * @param  {liElement} liElement - Specifies LI element.\n   * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n   * @param  {ListBaseOptions} options? - Specifies ListBase options.\n   */\n\n  function generateIcon(createElement, liElement, className, options) {\n    var curOpt = extend({}, defaultListBaseOptions, options);\n    cssClass = getModuleClass(curOpt.moduleName);\n    var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n    expandElement([createElement('div', {\n      className: 'e-icons ' + curOpt.expandIconClass + ' ' + (isNullOrUndefined(className) ? '' : className)\n    })], liElement.querySelector('.' + cssClass.textContent));\n    return liElement;\n  }\n\n  ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\n\n\nexport function getFieldValues(dataItem, fields) {\n  var fieldData = {};\n\n  if (isNullOrUndefined(dataItem) || typeof dataItem === 'string' || typeof dataItem === 'number' || !isNullOrUndefined(dataItem.isHeader)) {\n    return dataItem;\n  } else {\n    for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n      var field = _a[_i];\n      var dataField = fields[field];\n      var value = !isNullOrUndefined(dataField) && typeof dataField === 'string' ? getValue(dataField, dataItem) : undefined;\n\n      if (!isNullOrUndefined(value)) {\n        fieldData[dataField] = value;\n      }\n    }\n  }\n\n  return fieldData;\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/node_modules/@syncfusion/ej2-lists/src/common/list-base.js"],"names":["extend","merge","isNullOrUndefined","getValue","attributes","prepend","isVisible","append","addClass","compile","DataManager","Query","cssClass","li","ul","group","icon","text","check","checked","selected","expanded","textContent","hasChild","level","url","collapsible","disabled","image","iconWrapper","anchorWrap","navigable","ListBase","defaultMappedFields","id","value","isChecked","enabled","iconCss","child","hasChildren","tooltip","htmlAttributes","urlAttributes","imageAttributes","imageUrl","groupBy","defaultAriaAttributes","listRole","itemRole","groupItemRole","itemText","wrapperRole","defaultListBaseOptions","showCheckBox","showIcon","enableHtmlSanitizer","expandCollapse","fields","ariaAttributes","listClass","itemClass","processSubChild","sortOrder","template","groupTemplate","headerTemplate","expandIconClass","moduleName","expandIconPosition","itemNavigable","createList","createElement","dataSource","options","isSingleLevel","componentInstance","curOpt","type","typeofData","typeof","createListFromArray","createListFromJson","subChild","createListItemFromArray","generateUL","getModuleClass","generateId","i","length","itemCreating","curData","generateSingleLevelLI","undefined","generateLI","itemCreated","item","push","createListItemFromJson","checkboxElement","anchorElement","hasOwnProperty","fieldData","getFieldValues","curItem","innerEle","className","attrs","isHeader","querySelector","firstElementChild","classList","add","setAttribute","toString","style","display","attr","src","imageElemnt","insertAdjacentElement","iconElement","getSiblingLI","elementArray","element","isPrevious","siblingLI","liIndex","liCollections","Array","prototype","slice","call","indexOf","contains","groupDataSource","curFields","cusQuery","addSorting","ds","getDataSource","j","itemObj","items","grpItem","hdr","key","newtext","_id","trim","k","sortBy","query","queries","fn","splice","executeLocal","createJsonFromElement","curEle","cloneNode","jsonAr","childs","querySelectorAll","remove","anchor","json","childNodes","keys","Object","i_1","Number","hasChildNodes","attributes_1","getAllAttributes","data","match","elementAttributes","class","split","index","nodeName","nodeValue","renderContentTemplate","ulElement","role","compiledString","liCollection","innerText","currentID","groupTemplateID","templateID","isStringTemplate","renderGroupTemplate","headerItems","category","_i","headerItems_1","header","headerData","innerHTML","Math","floor","random","substring","subDS","subLi","appendChild","expandElement","innerElements","grpLI","elementID","href","anchorTag","document","createTextNode","moduleClass","isFullNavigation","anchorWrapper","uID","blazId","removeBlazorID","innerDiv","liElement","generateIcon","dataItem","_a","field","dataField"],"mappings":"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","sourcesContent":["import { extend, merge, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport { attributes, prepend, isVisible, append, addClass } from '@syncfusion/ej2-base';\nimport { compile } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nexport var cssClass = {\n    li: 'e-list-item',\n    ul: 'e-list-parent e-ul',\n    group: 'e-list-group-item',\n    icon: 'e-list-icon',\n    text: 'e-list-text',\n    check: 'e-list-check',\n    checked: 'e-checked',\n    selected: 'e-selected',\n    expanded: 'e-expanded',\n    textContent: 'e-text-content',\n    hasChild: 'e-has-child',\n    level: 'e-level',\n    url: 'e-list-url',\n    collapsible: 'e-icon-collapsible',\n    disabled: 'e-disabled',\n    image: 'e-list-img',\n    iconWrapper: 'e-icon-wrapper',\n    anchorWrap: 'e-anchor-wrap',\n    navigable: 'e-navigable'\n};\n/**\n * Base List Generator\n */\nexport var ListBase;\n(function (ListBase) {\n    /**\n     * Default mapped fields.\n     */\n    ListBase.defaultMappedFields = {\n        id: 'id',\n        text: 'text',\n        url: 'url',\n        value: 'value',\n        isChecked: 'isChecked',\n        enabled: 'enabled',\n        expanded: 'expanded',\n        selected: 'selected',\n        iconCss: 'iconCss',\n        child: 'child',\n        isVisible: 'isVisible',\n        hasChildren: 'hasChildren',\n        tooltip: 'tooltip',\n        htmlAttributes: 'htmlAttributes',\n        urlAttributes: 'urlAttributes',\n        imageAttributes: 'imageAttributes',\n        imageUrl: 'imageUrl',\n        groupBy: null\n    };\n    var defaultAriaAttributes = {\n        level: 1,\n        listRole: 'presentation',\n        itemRole: 'presentation',\n        groupItemRole: 'group',\n        itemText: 'list-item',\n        wrapperRole: 'presentation'\n    };\n    var defaultListBaseOptions = {\n        showCheckBox: false,\n        showIcon: false,\n        enableHtmlSanitizer: false,\n        expandCollapse: false,\n        fields: ListBase.defaultMappedFields,\n        ariaAttributes: defaultAriaAttributes,\n        listClass: '',\n        itemClass: '',\n        processSubChild: false,\n        sortOrder: 'None',\n        template: null,\n        groupTemplate: null,\n        headerTemplate: null,\n        expandIconClass: 'e-icon-collapsible',\n        moduleName: 'list',\n        expandIconPosition: 'Right',\n        itemNavigable: false\n    };\n    /**\n     * Function helps to created and return the UL Li element based on your data.\n     * @param  {{[key:string]:Object}[]|string[]} dataSource - Specifies an array of JSON or String data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createList(createElement, dataSource, \n    // tslint:disable-next-line\n    options, isSingleLevel, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var type = typeofData(dataSource).typeof;\n        if (type === 'string' || type === 'number') {\n            return createListFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        }\n        else {\n            // tslint:disable-next-line\n            return createListFromJson(createElement, dataSource, options, \n            // tslint:disable-next-line\n            ariaAttributes.level, isSingleLevel, componentInstance);\n        }\n    }\n    ListBase.createList = createList;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListFromArray(createElement, dataSource, \n    // tslint:disable-next-line\n    isSingleLevel, options, componentInstance) {\n        var subChild = createListItemFromArray(createElement, dataSource, isSingleLevel, options, componentInstance);\n        return generateUL(createElement, subChild, null, options);\n    }\n    ListBase.createListFromArray = createListFromArray;\n    /**\n     * Function helps to created an element list based on string array input .\n     * @param  {string[]} dataSource - Specifies an array of string data\n     */\n    function createListItemFromArray(createElement, dataSource, \n    // tslint:disable-next-line\n    isSingleLevel, options, componentInstance) {\n        var subChild = [];\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            var li = void 0;\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    options: curOpt\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (isSingleLevel) {\n                li = generateSingleLevelLI(createElement, dataSource[i], undefined, null, null, [], null, id, i, options);\n            }\n            else {\n                li = generateLI(createElement, dataSource[i], undefined, null, null, options, componentInstance);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: dataSource[i],\n                    item: li,\n                    options: curOpt\n                };\n                curOpt.itemCreated(curData);\n            }\n            subChild.push(li);\n        }\n        return subChild;\n    }\n    ListBase.createListItemFromArray = createListItemFromArray;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    // tslint:disable-next-line:max-func-body-length\n    // tslint:disable-next-line\n    function createListItemFromJson(createElement, dataSource, \n    // tslint:disable-next-line\n    options, level, isSingleLevel, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var id;\n        var checkboxElement = [];\n        if (level) {\n            ariaAttributes.level = level;\n        }\n        var child = [];\n        var li;\n        var anchorElement;\n        if (dataSource && dataSource.length && !isNullOrUndefined(typeofData(dataSource).item) &&\n            !typeofData(dataSource).item.hasOwnProperty(fields.id)) {\n            id = generateId(); // generate id for drop-down-list option.\n        }\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], fields);\n            if (isNullOrUndefined(dataSource[i])) {\n                continue;\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreating(curData);\n            }\n            var curItem = dataSource[i];\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], fields);\n            }\n            if (fieldData.hasOwnProperty(fields.id) && !isNullOrUndefined(fieldData[fields.id])) {\n                id = fieldData[fields.id];\n            }\n            var innerEle = [];\n            if (curOpt.showCheckBox) {\n                if (curOpt.itemNavigable && (fieldData[fields.url] || fieldData[fields.urlAttributes])) {\n                    checkboxElement.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n                else {\n                    innerEle.push(createElement('input', { className: cssClass.check, attrs: { type: 'checkbox' } }));\n                }\n            }\n            if (isSingleLevel === true) {\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) && !isNullOrUndefined(fieldData[fields.iconCss])) {\n                    innerEle.push(createElement('span', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] }));\n                }\n                li = generateSingleLevelLI(createElement, curItem, fieldData, fields, curOpt.itemClass, innerEle, (curItem.hasOwnProperty('isHeader') &&\n                    curItem.isHeader) ? true : false, id, i, options);\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n            }\n            else {\n                li = generateLI(createElement, curItem, fieldData, fields, curOpt.itemClass, options, componentInstance);\n                li.classList.add(cssClass.level + '-' + ariaAttributes.level);\n                li.setAttribute('aria-level', ariaAttributes.level.toString());\n                anchorElement = li.querySelector('.' + cssClass.anchorWrap);\n                if (fieldData.hasOwnProperty(fields.tooltip)) {\n                    li.setAttribute('title', fieldData[fields.tooltip]);\n                }\n                if (fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                    setAttribute(li, fieldData[fields.htmlAttributes]);\n                }\n                if (fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled] === false) {\n                    li.classList.add(cssClass.disabled);\n                }\n                if (fieldData.hasOwnProperty(fields.isVisible) && fieldData[fields.isVisible] === false) {\n                    li.style.display = 'none';\n                }\n                if (fieldData.hasOwnProperty(fields.imageUrl) && !isNullOrUndefined(fieldData[fields.imageUrl])\n                    && !curOpt.template) {\n                    var attr = { src: fieldData[fields.imageUrl] };\n                    merge(attr, fieldData[fields.imageAttributes]);\n                    var imageElemnt = createElement('img', { className: cssClass.image, attrs: attr });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', imageElemnt);\n                    }\n                    else {\n                        prepend([imageElemnt], li.firstElementChild);\n                    }\n                }\n                if (curOpt.showIcon && fieldData.hasOwnProperty(fields.iconCss) &&\n                    !isNullOrUndefined(fieldData[fields.iconCss]) && !curOpt.template) {\n                    var iconElement = void 0;\n                    iconElement = createElement('div', { className: cssClass.icon + ' ' + fieldData[fields.iconCss] });\n                    if (anchorElement) {\n                        anchorElement.insertAdjacentElement('afterbegin', iconElement);\n                    }\n                    else {\n                        prepend([iconElement], li.firstElementChild);\n                    }\n                }\n                if (innerEle.length) {\n                    prepend(innerEle, li.firstElementChild);\n                }\n                if (curOpt.itemNavigable && checkboxElement.length) {\n                    prepend(checkboxElement, li.firstElementChild);\n                }\n                processSubChild(createElement, fieldData, fields, dataSource, curOpt, li, ariaAttributes.level);\n            }\n            if (anchorElement) {\n                addClass([li], [cssClass.navigable]);\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: dataSource[i],\n                    text: fieldData[fields.text],\n                    item: li,\n                    options: curOpt,\n                    fields: fields\n                };\n                curOpt.itemCreated(curData);\n            }\n            checkboxElement = [];\n            child.push(li);\n        }\n        return child;\n    }\n    ListBase.createListItemFromJson = createListItemFromJson;\n    /**\n     * Function helps to created an element list based on array of JSON input .\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies an array of JSON data.\n     * @param  {ListBaseOptions} options? - Specifies the list options that need to provide.\n     */\n    function createListFromJson(createElement, dataSource, \n    // tslint:disable-next-line\n    options, level, isSingleLevel, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var li = createListItemFromJson(createElement, dataSource, options, level, isSingleLevel, componentInstance);\n        return generateUL(createElement, li, curOpt.listClass, options);\n    }\n    ListBase.createListFromJson = createListFromJson;\n    /**\n     * Return the next or previous visible element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find next or previous element.\n     * @param  {Element} li - An element to find next or previous after this element.\n     * @param  {boolean} isPrevious? - Specify when the need get previous element from array.\n     */\n    function getSiblingLI(elementArray, element, isPrevious) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        if (!elementArray || !elementArray.length) {\n            return void 0;\n        }\n        var siblingLI;\n        var liIndex;\n        var liCollections = Array.prototype.slice.call(elementArray);\n        if (element) {\n            liIndex = indexOf(element, liCollections);\n        }\n        else {\n            liIndex = (isPrevious === true ? liCollections.length : -1);\n        }\n        siblingLI = liCollections[liIndex + (isPrevious === true ? -1 : 1)];\n        while (siblingLI && (!isVisible(siblingLI) || siblingLI.classList.contains(cssClass.disabled))) {\n            liIndex = liIndex + (isPrevious === true ? -1 : 1);\n            siblingLI = liCollections[liIndex];\n        }\n        return siblingLI;\n    }\n    ListBase.getSiblingLI = getSiblingLI;\n    /**\n     * Return the index of the li element\n     * @param  {Element} item - An element to find next or previous after this element.\n     * @param  {Element[]|NodeList} elementArray - An element array to find index of given li.\n     */\n    function indexOf(item, elementArray) {\n        if (!elementArray || !item) {\n            return void 0;\n        }\n        else {\n            var liCollections = elementArray;\n            liCollections = Array.prototype.slice.call(elementArray);\n            return liCollections.indexOf(item);\n        }\n    }\n    ListBase.indexOf = indexOf;\n    /**\n     * Returns the grouped data from given dataSource.\n     * @param  {{[key:string]:Object}[]} dataSource - The JSON data which is necessary to process.\n     * @param  {FieldsMapping} fields - Fields that are mapped from the data source.\n     * @param  {SortOrder='None'} sortOrder- Specifies final result sort order.\n     */\n    function groupDataSource(dataSource, fields, sortOrder) {\n        if (sortOrder === void 0) { sortOrder = 'None'; }\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var cusQuery = new Query().group(curFields.groupBy);\n        // need to remove once sorting issues fixed in DataManager\n        cusQuery = addSorting(sortOrder, 'key', cusQuery);\n        var ds = getDataSource(dataSource, cusQuery);\n        dataSource = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            var grpItem = {};\n            var hdr = 'isHeader';\n            grpItem[curFields.text] = ds[j].key;\n            grpItem[hdr] = true;\n            var newtext = curFields.text;\n            if (newtext === 'id') {\n                newtext = 'text';\n                grpItem[newtext] = ds[j].key;\n            }\n            grpItem._id = 'group-list-item-' + (ds[j].key ?\n                ds[j].key.toString().trim() : 'undefined');\n            grpItem.items = itemObj;\n            dataSource.push(grpItem);\n            for (var k = 0; k < itemObj.length; k++) {\n                dataSource.push(itemObj[k]);\n            }\n        }\n        return dataSource;\n    }\n    ListBase.groupDataSource = groupDataSource;\n    /**\n     * Returns a sorted query object.\n     * @param  {SortOrder} sortOrder - Specifies that sort order.\n     * @param  {string} sortBy - Specifies sortBy fields.\n     * @param  {Query=new Query()} query - Pass if any existing query.\n     */\n    function addSorting(sortOrder, sortBy, query) {\n        if (query === void 0) { query = new Query(); }\n        if (sortOrder === 'Ascending') {\n            query.sortBy(sortBy, 'ascending', true);\n        }\n        else if (sortOrder === 'Descending') {\n            query.sortBy(sortBy, 'descending', true);\n        }\n        else {\n            for (var i = 0; i < query.queries.length; i++) {\n                if (query.queries[i].fn === 'onSortBy') {\n                    query.queries.splice(i, 1);\n                }\n            }\n        }\n        return query;\n    }\n    ListBase.addSorting = addSorting;\n    /**\n     * Return an array of JSON Data that processed based on queries.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {Query} query - Specifies query that need to process.\n     */\n    function getDataSource(dataSource, query) {\n        // tslint:disable-next-line\n        return new DataManager(dataSource)\n            .executeLocal(query);\n    }\n    ListBase.getDataSource = getDataSource;\n    /**\n     * Created JSON data based the UL and LI element\n     * @param  {HTMLElement|Element} element - UL element that need to convert as a JSON\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function createJsonFromElement(element, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var fields = extend({}, ListBase.defaultMappedFields, curOpt.fields);\n        var curEle = element.cloneNode(true);\n        var jsonAr = [];\n        curEle.classList.add('json-parent');\n        var childs = curEle.querySelectorAll('.json-parent>li');\n        curEle.classList.remove('json-parent');\n        for (var i = 0; i < childs.length; i++) {\n            var li = childs[i];\n            var anchor = li.querySelector('a');\n            var ul = li.querySelector('ul');\n            var json = {};\n            var childNodes = anchor ? anchor.childNodes : li.childNodes;\n            var keys = Object.keys(childNodes);\n            for (var i_1 = 0; i_1 < childNodes.length; i_1++) {\n                if (!(childNodes[Number(keys[i_1])]).hasChildNodes()) {\n                    json[fields.text] = childNodes[Number(keys[i_1])].textContent;\n                }\n            }\n            var attributes_1 = getAllAttributes(li);\n            if (attributes_1.id) {\n                json[fields.id] = attributes_1.id;\n                delete attributes_1.id;\n            }\n            else {\n                json[fields.id] = generateId();\n            }\n            if (Object.keys(attributes_1).length) {\n                json[fields.htmlAttributes] = attributes_1;\n            }\n            if (anchor) {\n                attributes_1 = getAllAttributes(anchor);\n                if (Object.keys(attributes_1).length) {\n                    json[fields.urlAttributes] = attributes_1;\n                }\n            }\n            if (ul) {\n                json[fields.child] = createJsonFromElement(ul, options);\n            }\n            jsonAr.push(json);\n        }\n        return jsonAr;\n    }\n    ListBase.createJsonFromElement = createJsonFromElement;\n    function typeofData(data) {\n        var match = { typeof: null, item: null };\n        for (var i = 0; i < data.length; i++) {\n            if (!isNullOrUndefined(data[i])) {\n                return match = { typeof: typeof data[i], item: data[i] };\n            }\n        }\n        return match;\n    }\n    function setAttribute(element, elementAttributes) {\n        var attr = {};\n        merge(attr, elementAttributes);\n        if (attr.class) {\n            addClass([element], attr.class.split(' '));\n            delete attr.class;\n        }\n        attributes(element, attr);\n    }\n    function getAllAttributes(element) {\n        var attributes = {};\n        var attr = element.attributes;\n        for (var index = 0; index < attr.length; index++) {\n            attributes[attr[index].nodeName] = attr[index].nodeValue;\n        }\n        return attributes;\n    }\n    /**\n     * Created UL element from content template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {ListBaseOptions} options? - Specifies listbase option for fields.\n     */\n    function renderContentTemplate(createElement, template, dataSource, \n    // tslint:disable-next-line\n    fields, options, componentInstance) {\n        cssClass = getModuleClass(defaultListBaseOptions.moduleName);\n        var ulElement = createElement('ul', { className: cssClass.ul, attrs: { role: 'presentation' } });\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var compiledString = compile(template);\n        var liCollection = [];\n        var value;\n        var id = generateId(); // generate id for drop-down-list option.\n        for (var i = 0; i < dataSource.length; i++) {\n            var fieldData = getFieldValues(dataSource[i], curFields);\n            var curItem = dataSource[i];\n            var isHeader = curItem.isHeader;\n            if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                value = curItem;\n            }\n            else {\n                value = fieldData[curFields.value];\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreating(curData);\n            }\n            if (curOpt.itemCreating && typeof curOpt.itemCreating === 'function') {\n                fieldData = getFieldValues(dataSource[i], curFields);\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    value = curItem;\n                }\n                else {\n                    value = fieldData[curFields.value];\n                }\n            }\n            var li = createElement('li', {\n                id: id + '-' + i,\n                className: isHeader ? cssClass.group : cssClass.li, attrs: { role: 'presentation' }\n            });\n            if (isHeader) {\n                if (typeof dataSource[i] === 'string' || typeof dataSource[i] === 'number') {\n                    li.innerText = curItem;\n                }\n                else {\n                    li.innerText = fieldData[curFields.text];\n                }\n            }\n            else {\n                var currentID = isHeader ? curOpt.groupTemplateID : curOpt.templateID;\n                if (isHeader) {\n                    append(compiledString(curItem, componentInstance, 'headerTemplate', currentID, !!curOpt.isStringTemplate), li);\n                }\n                else {\n                    append(compiledString(curItem, componentInstance, 'template', currentID, !!curOpt.isStringTemplate), li);\n                }\n                li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n                li.setAttribute('role', 'option');\n            }\n            if (curOpt.itemCreated && typeof curOpt.itemCreated === 'function') {\n                var curData = {\n                    dataSource: dataSource,\n                    curData: curItem,\n                    text: value,\n                    item: li,\n                    options: curOpt,\n                    fields: curFields\n                };\n                curOpt.itemCreated(curData);\n            }\n            liCollection.push(li);\n        }\n        append(liCollection, ulElement);\n        return ulElement;\n    }\n    ListBase.renderContentTemplate = renderContentTemplate;\n    /**\n     * Created header items from group template.\n     * @param  {string} template - that need to convert and generate li element.\n     * @param  {{[key:string]:Object}[]} dataSource - Specifies local JSON data source.\n     * @param  {FieldsMapping} fields - Specifies fields for mapping the dataSource.\n     * @param  {Element[]} headerItems? - Specifies listbase header items.\n     */\n    // tslint:disable-next-line\n    function renderGroupTemplate(groupTemplate, groupDataSource, fields, \n    // tslint:disable-next-line\n    headerItems, options, componentInstance) {\n        var compiledString = compile(groupTemplate);\n        var curFields = extend({}, ListBase.defaultMappedFields, fields);\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var category = curFields.groupBy;\n        for (var _i = 0, headerItems_1 = headerItems; _i < headerItems_1.length; _i++) {\n            var header = headerItems_1[_i];\n            var headerData = {};\n            headerData[category] = header.textContent;\n            header.innerHTML = '';\n            append(compiledString(headerData, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), header);\n        }\n        return headerItems;\n    }\n    ListBase.renderGroupTemplate = renderGroupTemplate;\n    function generateId() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n    }\n    ListBase.generateId = generateId;\n    function processSubChild(createElement, fieldData, fields, ds, options, element, level) {\n        // Get SubList\n        var subDS = fieldData[fields.child] || [];\n        var hasChildren = fieldData[fields.hasChildren];\n        //Create Sub child\n        if (subDS.length) {\n            hasChildren = true;\n            element.classList.add(cssClass.hasChild);\n            if (options.processSubChild) {\n                var subLi = createListFromJson(createElement, subDS, options, ++level);\n                element.appendChild(subLi);\n            }\n        }\n        // Create expand and collapse node\n        if (!!options.expandCollapse && hasChildren && !options.template) {\n            element.firstElementChild.classList.add(cssClass.iconWrapper);\n            var expandElement = options.expandIconPosition === 'Left' ? prepend : append;\n            expandElement([createElement('div', { className: 'e-icons ' + options.expandIconClass })], element.querySelector('.' + cssClass.textContent));\n        }\n    }\n    function generateSingleLevelLI(createElement, item, fieldData, fields, className, innerElements, grpLI, id, index, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var value = item;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number' && typeof item !== 'boolean') {\n            dataSource = item;\n            text = (typeof fieldData[fields.text] === 'boolean' || typeof fieldData[fields.text] === 'number') ?\n                fieldData[fields.text] : (fieldData[fields.text] || '');\n            value = fieldData[fields.value];\n        }\n        var elementID;\n        if (!isNullOrUndefined(dataSource) && !isNullOrUndefined(fieldData[fields.id])\n            && fieldData[fields.id] !== '') {\n            elementID = id;\n        }\n        else {\n            elementID = id + '-' + index;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            id: elementID, attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        if (dataSource && fieldData.hasOwnProperty(fields.enabled) && fieldData[fields.enabled].toString() === 'false') {\n            li.classList.add(cssClass.disabled);\n        }\n        if (grpLI) {\n            li.innerText = text;\n        }\n        else {\n            li.setAttribute('data-value', isNullOrUndefined(value) ? 'null' : value);\n            li.setAttribute('role', 'option');\n            if (dataSource && fieldData.hasOwnProperty(fields.htmlAttributes) && fieldData[fields.htmlAttributes]) {\n                setAttribute(li, fieldData[fields.htmlAttributes]);\n            }\n            if (innerElements.length && !curOpt.itemNavigable) {\n                append(innerElements, li);\n            }\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                li.appendChild(anchorTag(createElement, dataSource, fields, text, innerElements, curOpt.itemNavigable));\n            }\n            else {\n                if (innerElements.length && curOpt.itemNavigable) {\n                    append(innerElements, li);\n                }\n                li.appendChild(document.createTextNode(text));\n            }\n        }\n        return li;\n    }\n    function getModuleClass(moduleName) {\n        var moduleClass;\n        return moduleClass = {\n            li: \"e-\" + moduleName + \"-item\",\n            ul: \"e-\" + moduleName + \"-parent e-ul\",\n            group: \"e-\" + moduleName + \"-group-item\",\n            icon: \"e-\" + moduleName + \"-icon\",\n            text: \"e-\" + moduleName + \"-text\",\n            check: \"e-\" + moduleName + \"-check\",\n            checked: 'e-checked',\n            selected: 'e-selected',\n            expanded: 'e-expanded',\n            textContent: 'e-text-content',\n            hasChild: 'e-has-child',\n            level: 'e-level',\n            url: \"e-\" + moduleName + \"-url\",\n            collapsible: 'e-icon-collapsible',\n            disabled: 'e-disabled',\n            image: \"e-\" + moduleName + \"-img\",\n            iconWrapper: 'e-icon-wrapper',\n            anchorWrap: 'e-anchor-wrap',\n            navigable: 'e-navigable',\n        };\n    }\n    function anchorTag(createElement, dataSource, fields, text, innerElements, isFullNavigation) {\n        var fieldData = getFieldValues(dataSource, fields);\n        var attr = { href: fieldData[fields.url] };\n        if (fieldData.hasOwnProperty(fields.urlAttributes) && fieldData[fields.urlAttributes]) {\n            merge(attr, fieldData[fields.urlAttributes]);\n            attr.href = fieldData[fields.url] ? fieldData[fields.url] :\n                fieldData[fields.urlAttributes].href;\n        }\n        var anchorTag;\n        if (!isFullNavigation) {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url, innerHTML: text });\n        }\n        else {\n            anchorTag = createElement('a', { className: cssClass.text + ' ' + cssClass.url });\n            var anchorWrapper = createElement('div', { className: cssClass.anchorWrap });\n            if (innerElements && innerElements.length) {\n                append(innerElements, anchorWrapper);\n            }\n            anchorWrapper.appendChild(document.createTextNode(text));\n            append([anchorWrapper], anchorTag);\n        }\n        setAttribute(anchorTag, attr);\n        return anchorTag;\n    }\n    // tslint:disable-next-line\n    /* tslint:disable:align */\n    function generateLI(createElement, item, fieldData, \n    // tslint:disable-next-line\n    fields, className, options, componentInstance) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        var text = item;\n        var uID;\n        var grpLI;\n        var dataSource;\n        if (typeof item !== 'string' && typeof item !== 'number') {\n            dataSource = item;\n            text = fieldData[fields.text] || '';\n            // tslint:disable-next-line\n            uID = (isNullOrUndefined(fieldData['_id'])) ? fieldData[fields.id] : fieldData['_id'];\n            grpLI = (item.hasOwnProperty('isHeader') && item.isHeader)\n                ? true : false;\n        }\n        if (options && options.enableHtmlSanitizer) {\n            text = text;\n        }\n        var li = createElement('li', {\n            className: (grpLI === true ? cssClass.group : cssClass.li) + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.groupItemRole !== '' && ariaAttributes.itemRole !== '' ?\n                { role: (grpLI === true ? ariaAttributes.groupItemRole : ariaAttributes.itemRole) } : {})\n        });\n        !isNullOrUndefined(uID) ? li.setAttribute('data-uid', uID) : li.setAttribute('data-uid', generateId());\n        var blazId = 'BlazId';\n        if (options && !!options.removeBlazorID\n            && typeof item === 'object'\n            && item.hasOwnProperty(blazId)) {\n            delete item[blazId];\n        }\n        if (grpLI && options && options.groupTemplate) {\n            var compiledString = compile(options.groupTemplate);\n            append(compiledString(item, componentInstance, 'groupTemplate', curOpt.groupTemplateID, !!curOpt.isStringTemplate), li);\n        }\n        else if (!grpLI && options && options.template) {\n            var compiledString = compile(options.template);\n            append(compiledString(item, componentInstance, 'template', curOpt.templateID, !!curOpt.isStringTemplate), li);\n        }\n        else {\n            var innerDiv = createElement('div', {\n                className: cssClass.textContent,\n                attrs: (ariaAttributes.wrapperRole !== '' ? { role: ariaAttributes.wrapperRole } : {})\n            });\n            if (dataSource && (fieldData[fields.url] || (fieldData[fields.urlAttributes] &&\n                fieldData[fields.urlAttributes].href))) {\n                innerDiv.appendChild(anchorTag(createElement, dataSource, fields, text, null, curOpt.itemNavigable));\n            }\n            else {\n                var element = createElement('span', {\n                    className: cssClass.text,\n                    attrs: (ariaAttributes.itemText !== '' ? { role: ariaAttributes.itemText } : {})\n                });\n                if (options && options.enableHtmlSanitizer) {\n                    element.innerText = text;\n                }\n                else {\n                    element.innerHTML = text;\n                }\n                innerDiv.appendChild(element);\n            }\n            li.appendChild(innerDiv);\n        }\n        return li;\n    }\n    /**\n     * Returns UL element based on the given LI element.\n     * @param  {HTMLElement[]} liElement - Specifies array of LI element.\n     * @param  {string} className? - Specifies class name that need to be added in UL element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateUL(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        var ariaAttributes = extend({}, defaultAriaAttributes, curOpt.ariaAttributes);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var ulElement = createElement('ul', {\n            className: cssClass.ul + ' ' + (isNullOrUndefined(className) ? '' : className),\n            attrs: (ariaAttributes.listRole !== '' ? { role: ariaAttributes.listRole } : {})\n        });\n        append(liElement, ulElement);\n        return ulElement;\n    }\n    ListBase.generateUL = generateUL;\n    /**\n     * Returns LI element with additional DIV tag based on the given LI element.\n     * @param  {liElement} liElement - Specifies LI element.\n     * @param  {string} className? - Specifies class name that need to be added in created DIV element.\n     * @param  {ListBaseOptions} options? - Specifies ListBase options.\n     */\n    function generateIcon(createElement, liElement, className, options) {\n        var curOpt = extend({}, defaultListBaseOptions, options);\n        cssClass = getModuleClass(curOpt.moduleName);\n        var expandElement = curOpt.expandIconPosition === 'Left' ? prepend : append;\n        expandElement([createElement('div', {\n                className: 'e-icons ' + curOpt.expandIconClass + ' ' +\n                    (isNullOrUndefined(className) ? '' : className)\n            })], liElement.querySelector('.' + cssClass.textContent));\n        return liElement;\n    }\n    ListBase.generateIcon = generateIcon;\n})(ListBase || (ListBase = {}));\n/**\n * Used to get dataSource item from complex data using fields.\n * @param {{[key:string]:Object}|string[]|string} dataSource - Specifies an  JSON or String data.\n * @param {FieldsMapping} fields - Fields that are mapped from the dataSource.\n */\nexport function getFieldValues(dataItem, fields) {\n    var fieldData = {};\n    if (isNullOrUndefined(dataItem) || typeof (dataItem) === 'string' || typeof (dataItem) === 'number'\n        || !isNullOrUndefined(dataItem.isHeader)) {\n        return dataItem;\n    }\n    else {\n        for (var _i = 0, _a = Object.keys(fields); _i < _a.length; _i++) {\n            var field = _a[_i];\n            var dataField = fields[field];\n            var value = !isNullOrUndefined(dataField) &&\n                typeof (dataField) === 'string' ? getValue(dataField, dataItem) : undefined;\n            if (!isNullOrUndefined(value)) {\n                fieldData[dataField] = value;\n            }\n        }\n    }\n    return fieldData;\n}\n"]},"metadata":{},"sourceType":"module"}