{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewAct.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nconst format = 'h:mm a';\nconst now = moment().hour(0).minute(0);\nexport default class NewAct extends Component {\n  constructor() {\n    super();\n\n    this.handleTimeChange = (event, {\n      name,\n      value\n    }) => {\n      if (this.state.hasOwnProperty(name)) {\n        this.setState({\n          time: value\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleCalChange = (event, {\n      name,\n      value\n    }) => {\n      if (this.state.hasOwnProperty(name)) {\n        this.setState({\n          date: value\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newAct = {\n        event_id: this.props.event_id,\n        description: this.state.description,\n        date: this.state.date,\n        time: this.state.time\n      };\n      fetch(\"http://localhost:3000/activities\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        },\n        body: JSON.stringify(newAct)\n      }).then(res => res.json()).then(json => this.props.newAct(json));\n      this.setState({\n        event_id: \" \",\n        description: '',\n        date: '',\n        time: ' '\n      });\n    };\n\n    this.state = {\n      event_id: \" \",\n      description: '',\n      date: '',\n      time: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          onChange: this.handleChange,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(DateInput, {\n            inline: true,\n            name: \"date\",\n            value: this.state.date,\n            onChange: this.handleCalChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          onChange: this.handleChange,\n          children: /*#__PURE__*/_jsxDEV(TimePicker, {\n            showSecond: false,\n            defaultValue: now,\n            className: \"xxx\",\n            onChange: this.handleTimeChange,\n            format: format,\n            use12Hours: true,\n            inputReadOnly: true,\n            name: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          type: \"submit\",\n          \"text-align\": \"center\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewAct.js"],"names":["React","Component","Button","Checkbox","Form","DateInput","TimeInput","DateTimeInput","DatesRangeInput","moment","TimePicker","format","now","hour","minute","NewAct","constructor","handleTimeChange","event","name","value","state","hasOwnProperty","setState","time","handleChange","e","target","handleCalChange","date","handleSubmit","preventDefault","newAct","event_id","props","description","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport {\n    DateInput,\n    TimeInput,\n    DateTimeInput,\n    DatesRangeInput\n  } from 'semantic-ui-calendar-react';\n  \nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\n\n\nconst format = 'h:mm a';\nconst now = moment().hour(0).minute(0);\n\nexport default class NewAct extends Component {\n    constructor(){\n        super()\n        this.state = {\n            event_id: \" \",\n            description: '',\n            date: '',\n            time: ''\n        }\n    }\n\n\n    handleTimeChange = (event, {name, value}) => {\n        if (this.state.hasOwnProperty(name)) {\n          this.setState({ time: value });\n        }\n      }\n\n    handleChange=(e)=> {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleCalChange = (event, {name, value}) => {\n        if (this.state.hasOwnProperty(name)) {\n          this.setState({ date: value });\n        }\n      }\n\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const newAct={\n            event_id: this.props.event_id,\n            description: this.state.description,\n            date: this.state.date,\n            time: this.state.time,\n        }\n        fetch(\"http://localhost:3000/activities\", {\n            method: \"POST\",\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            },\n            body: JSON.stringify(newAct)\n        })\n        .then(res=>res.json())\n        .then(json=>this.props.newAct(json))\n        this.setState({\n            event_id: \" \",\n            description: '',\n            date: '',\n            time: ' '\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                    <Form onSubmit={this.handleSubmit}> \n                    <Form.Field onChange={this.handleChange}>\n                        <input type=\"text\" name=\"description\" value={this.state.description} placeholder =\"Description\" ></input>\n                    </Form.Field >\n                    <Form.Field > \n                            <DateInput inline name = \"date\" value={this.state.date} onChange={this.handleCalChange} />\n                    </Form.Field>\n                    <Form.Field onChange={this.handleChange} > \n                        <TimePicker\n                        showSecond={false}\n                        defaultValue={now}\n                        className=\"xxx\"\n                        onChange={this.handleTimeChange}\n                        format={format}\n                        use12Hours\n                        inputReadOnly\n                        name=\"time\" \n                    />\n                    {/* <input type=\"text\" name=\"time\" value={this.state.time} placeholder =\"Time\" ></input> */}\n                    </Form.Field>\n                    <Button fluid type=\"submit\" text-align=\"center\">Submit</Button>\n                </Form> <br/>    \n\n\n                {/* <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name=\"description\" value={this.state.description} placeholder =\"Description\" onChange={this.handleChange}/><br></br>        \n                <input type=\"text\" name=\"date\" value={this.state.date} placeholder= \"Date\" onChange={this.handleChange}/><br></br>\n                <input type=\"text\" name=\"time\" value={this.state.time} placeholder= \"Time\" onChange={this.handleChange}/><br></br>\n                <Button type=\"submit\" text-align=\"center\">Submit</Button>\n            </form>   */}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}