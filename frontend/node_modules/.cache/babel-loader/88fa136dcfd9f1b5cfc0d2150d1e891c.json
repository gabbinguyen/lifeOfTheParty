{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/Testing.js\";\nimport { Box, Card, CardBody, CardFooter, CardHeader, Icons } from 'grommet';\nimport { Accordion, Col, Modal, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport ToggleDisplay from 'react-toggle-display';\nexport default class Testing extends Component {\n  constructor() {\n    super();\n    this.state = {\n      show: false\n    };\n  }\n\n  handleClick() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleClick(),\n          children: \"Toggle things\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToggleDisplay, {\n        show: this.state.show,\n        children: \"I am rendered in a span (by default) and hidden with display:none when show is false.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToggleDisplay, {\n        if: this.state.show,\n        tag: \"section\",\n        children: \"I am rendered in a section and removed from the DOM when if is false.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/Testing.js"],"names":["Box","Card","CardBody","CardFooter","CardHeader","Icons","Accordion","Col","Modal","Button","React","Component","ToggleDisplay","Testing","constructor","state","show","handleClick","setState","render"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8BC,UAA9B,EAA0CC,UAA1C,EAAsDC,KAAtD,QAAmE,SAAnE;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA4C,iBAA5C;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,eAAe,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC3CG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,CAAc;AACZF,MAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADN,KAAd;AAGD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAG,MAAM,KAAKF,WAAL,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE,QAAC,aAAD;AAAe,QAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,IAA9B;AAAoC,QAAA,GAAG,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA3BwC","sourcesContent":["import { Box, Card, CardBody, CardFooter, CardHeader, Icons } from 'grommet';\nimport {Accordion, Col, Modal, Button} from 'react-bootstrap'\n\nimport React, { Component } from 'react'\nimport ToggleDisplay from 'react-toggle-display';\n\nexport default class Testing extends Component {\n    constructor() {\n        super();\n        this.state = { show: false };\n      }\n     \n      handleClick() {\n        this.setState({\n          show: !this.state.show\n        });\n      }\n     \n      render() {\n        return (\n          <div className=\"App\">\n            <p className=\"App-intro\">\n              <button onClick={ () => this.handleClick() }>Toggle things</button>\n            </p>\n            <ToggleDisplay show={this.state.show}>\n              I am rendered in a span (by default) and hidden with display:none when show is false.\n            </ToggleDisplay>\n     \n            <ToggleDisplay if={this.state.show} tag=\"section\">\n              I am rendered in a section and removed from the DOM when if is false.\n            </ToggleDisplay>\n          </div>\n        );\n      }\n    }"]},"metadata":{},"sourceType":"module"}