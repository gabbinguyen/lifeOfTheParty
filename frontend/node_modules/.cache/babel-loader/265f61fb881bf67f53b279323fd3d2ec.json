{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewAct.js\";\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form } from 'semantic-ui-react';\nimport { DateInput, TimeInput, DateTimeInput, DatesRangeInput } from 'semantic-ui-calendar-react';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nconst format = 'h:mm a';\nconst now = moment().hour(0).minute(0);\nconst date = 'MMM D YY';\nconst pick = moment().year(year).month(month).date(day); // console.log(dateObject)\n\nexport default class NewAct extends Component {\n  constructor() {\n    super();\n\n    this.handleTimeChange = value => {\n      console.log(value);\n      this.setState({\n        time: value.format(format)\n      }); // if (this.state.hasOwnProperty(name)) {\n      //   this.setState({ time: value });\n      // }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleCalChange = (event, {\n      name,\n      value\n    }) => {\n      console.log(moment(value)); // console.log(day.format(date))\n      // if (this.state.hasOwnProperty(name)) {\n      //   this.setState({ date: value });\n      // }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newAct = {\n        event_id: this.props.event_id,\n        description: this.state.description,\n        date: this.state.date,\n        time: this.state.time\n      };\n      fetch(\"http://localhost:3000/activities\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        },\n        body: JSON.stringify(newAct)\n      }).then(res => res.json()).then(json => this.props.newAct(json));\n      this.setState({\n        event_id: \" \",\n        description: '',\n        date: '',\n        time: ' '\n      });\n    };\n\n    this.state = {\n      event_id: \" \",\n      description: '',\n      date: '',\n      time: ''\n    };\n  }\n\n  render() {\n    // console.log(moment(\"2019-05-13\"))\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          onChange: this.handleChange,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: this.state.description,\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(DateInput, {\n            inline: true,\n            name: \"date\",\n            value: this.state.date,\n            onChange: this.handleCalChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(TimePicker, {\n            name: \"time\",\n            showSecond: false,\n            defaultValue: now,\n            onChange: this.handleTimeChange,\n            format: format,\n            use12Hours: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fluid: true,\n          type: \"submit\",\n          \"text-align\": \"center\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/src/components/NewAct.js"],"names":["React","Component","Button","Checkbox","Form","DateInput","TimeInput","DateTimeInput","DatesRangeInput","moment","TimePicker","format","now","hour","minute","date","pick","year","month","day","NewAct","constructor","handleTimeChange","value","console","log","setState","time","handleChange","e","name","target","handleCalChange","event","handleSubmit","preventDefault","newAct","event_id","props","description","state","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Checkbox, Form } from 'semantic-ui-react'\nimport {\n    DateInput,\n    TimeInput,\n    DateTimeInput,\n    DatesRangeInput\n  } from 'semantic-ui-calendar-react';\n  \nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\n\n\nconst format = 'h:mm a';\nconst now = moment().hour(0).minute(0);\nconst date = 'MMM D YY'\nconst pick = moment().year(year).month(month).date(day)\n\n\n// console.log(dateObject)\n\nexport default class NewAct extends Component {\n    constructor(){\n        super()\n        this.state = {\n            event_id: \" \",\n            description: '',\n            date: '',\n            time: ''\n        }\n    }\n\n\n    handleTimeChange = (value) => {\n        console.log(value)\n        this.setState({time: value.format(format)})\n        // if (this.state.hasOwnProperty(name)) {\n        //   this.setState({ time: value });\n        // }\n      }\n\n    handleChange=(e)=> {\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleCalChange = (event, {name, value}) => {\n        console.log(moment(value))\n        // console.log(day.format(date))\n\n        // if (this.state.hasOwnProperty(name)) {\n        //   this.setState({ date: value });\n        // }\n      }\n\n\n    handleSubmit=(e)=>{\n        e.preventDefault()\n        const newAct={\n            event_id: this.props.event_id,\n            description: this.state.description,\n            date: this.state.date,\n            time: this.state.time,\n        }\n        fetch(\"http://localhost:3000/activities\", {\n            method: \"POST\",\n            headers:{\n                'Content-Type': 'application/json',\n                'Auth-Key': localStorage.getItem('auth_key')\n            },\n            body: JSON.stringify(newAct)\n        })\n        .then(res=>res.json())\n        .then(json=>this.props.newAct(json))\n        this.setState({\n            event_id: \" \",\n            description: '',\n            date: '',\n            time: ' '\n        })\n    }\n\n    render() {\n        // console.log(moment(\"2019-05-13\"))\n        return (\n            <div>\n                    <Form onSubmit={this.handleSubmit}> \n                    <Form.Field onChange={this.handleChange}>\n                        <input type=\"text\" name=\"description\" value={this.state.description} placeholder =\"Description\" ></input>\n                    </Form.Field >\n                    <Form.Field > \n                            <DateInput inline name = \"date\" value={this.state.date} onChange={this.handleCalChange} />\n                    </Form.Field>\n                    <Form.Field  > \n                        <TimePicker name=\"time\" showSecond={false} defaultValue={now} onChange={this.handleTimeChange} format={format} use12Hours/>\n                    </Form.Field>\n                    <Button fluid type=\"submit\" text-align=\"center\">Submit</Button>\n                </Form> <br/>    \n\n\n                {/* <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name=\"description\" value={this.state.description} placeholder =\"Description\" onChange={this.handleChange}/><br></br>        \n                <input type=\"text\" name=\"date\" value={this.state.date} placeholder= \"Date\" onChange={this.handleChange}/><br></br>\n                <input type=\"text\" name=\"time\" value={this.state.time} placeholder= \"Time\" onChange={this.handleChange}/><br></br>\n                <Button type=\"submit\" text-align=\"center\">Submit</Button>\n            </form>   */}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}