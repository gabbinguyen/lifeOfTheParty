{"ast":null,"code":"// This file contains helper functions for DataTable, to keep the component\n// files simpler.\nexport var set = function set(obj, path, value) {\n  var parts = path;\n  if (Object(obj) !== obj) return obj;\n  if (!Array.isArray(path)) parts = path.toString().match(/[^.[\\]]+/g) || [];\n  parts.slice(0, -1).reduce(function (acc, item, index) {\n    if (Object(acc[item]) === acc[item]) {\n      return acc[item];\n    }\n\n    acc[item] = Math.abs(parts[index + 1]) > 0 === +parts[index + 1] ? [] : {};\n    return acc[item];\n  }, obj)[parts[parts.length - 1]] = value;\n  return obj;\n}; // get the value for the property in the datum object\n\nexport var datumValue = function datumValue(datum, property) {\n  if (!property) return undefined;\n  var parts = property.split('.');\n\n  if (parts.length === 1) {\n    return datum[property];\n  }\n\n  if (!datum[parts[0]]) {\n    return undefined;\n  }\n\n  return datumValue(datum[parts[0]], parts.slice(1).join('.'));\n}; // get the primary property name\n\nexport var normalizePrimaryProperty = function normalizePrimaryProperty(columns, primaryKey) {\n  var result;\n  columns.forEach(function (column) {\n    // remember the first key property\n    if (column.primary && !result) {\n      result = column.property;\n    }\n  });\n\n  if (!result) {\n    if (primaryKey === false) result = undefined;else if (primaryKey) result = primaryKey;else if (columns.length > 0) result = columns[0].property;\n  }\n\n  return result;\n}; // initialize filters with empty strings\n\nexport var initializeFilters = function initializeFilters(columns) {\n  var result = {};\n  columns.forEach(function (column) {\n    if (column.search) {\n      result[column.property] = '';\n    }\n  });\n  return result;\n}; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n\nvar escapeRegExp = function escapeRegExp(input) {\n  return input.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}; // filter data based on filters then sort\n\n\nexport var filterAndSortData = function filterAndSortData(data, filters, onSearch, sort) {\n  var result = data;\n\n  if (!onSearch) {\n    var regexps = {};\n    Object.keys(filters).filter(function (n) {\n      return filters[n];\n    }).forEach(function (n) {\n      regexps[n] = new RegExp(escapeRegExp(filters[n]), 'i');\n    });\n\n    if (Object.keys(regexps).length > 0) {\n      result = data.filter(function (datum) {\n        return !Object.keys(regexps).some(function (property) {\n          return !regexps[property].test(datumValue(datum, property));\n        });\n      });\n    }\n  }\n\n  if (sort && !sort.external) {\n    var property = sort.property,\n        direction = sort.direction;\n    result = result === data ? [].concat(data) : result; // don't sort caller's data\n\n    var before = direction === 'asc' ? 1 : -1;\n    var after = direction === 'asc' ? -1 : 1;\n    result.sort(function (d1, d2) {\n      if (datumValue(d1, property) > datumValue(d2, property)) return before;\n      if (datumValue(d1, property) < datumValue(d2, property)) return after;\n      return 0;\n    });\n  }\n\n  return result;\n}; // aggregate reducers\n\nvar sumReducer = function sumReducer(accumulated, next) {\n  return accumulated + next;\n};\n\nvar minReducer = function minReducer(accumulated, next) {\n  return accumulated === undefined ? next : Math.min(accumulated, next);\n};\n\nvar maxReducer = function maxReducer(accumulated, next) {\n  return accumulated === undefined ? next : Math.max(accumulated, next);\n};\n\nvar reducers = {\n  max: maxReducer,\n  min: minReducer,\n  sum: sumReducer\n}; // aggregate reducers init values\n\nvar reducersInitValues = {\n  min: Number.MAX_VALUE,\n  max: Number.MIN_VALUE,\n  sum: 0\n}; // aggregate a single column\n\nvar aggregateColumn = function aggregateColumn(column, data) {\n  var value;\n\n  if (column.aggregate === 'avg') {\n    value = data.map(function (d) {\n      return datumValue(d, column.property);\n    }).reduce(sumReducer);\n    value /= data.length;\n  } else {\n    value = data.map(function (d) {\n      return datumValue(d, column.property);\n    }).reduce(reducers[column.aggregate], reducersInitValues[column.aggregate]);\n  }\n\n  return value;\n}; // aggregate all columns that can\n\n\nvar aggregate = function aggregate(columns, data) {\n  var result = {};\n  columns.forEach(function (column) {\n    if (column.aggregate) {\n      var value = aggregateColumn(column, data);\n      result = set(result, column.property, value);\n    }\n  });\n  return result;\n}; // build the values for the footer cells\n\n\nexport var buildFooterValues = function buildFooterValues(columns, data) {\n  var aggregateValues = aggregate(columns, data);\n  var result = {};\n  columns.forEach(function (column) {\n    if (column.footer) {\n      if (typeof column.footer === 'string') {\n        result = set(result, column.property, column.footer);\n      } else if (column.footer.aggregate) {\n        var value = datumValue(aggregateValues, column.property);\n        result = set(result, column.property, value);\n      }\n    }\n  });\n  return result;\n}; // looks at the groupBy property of each data object and returns an\n// array with one item for each unique value of that property.\n\nexport var buildGroups = function buildGroups(columns, data, groupBy) {\n  var result;\n\n  if (groupBy) {\n    result = [];\n    var groupMap = {};\n    data.forEach(function (datum) {\n      var groupByProperty = groupBy.property ? groupBy.property : groupBy;\n      var groupValue = datumValue(datum, groupByProperty);\n\n      if (!groupMap[groupValue]) {\n        var group = {\n          data: [],\n          datum: {},\n          key: groupValue\n        };\n        group.datum[groupByProperty] = groupValue;\n        result.push(group);\n        groupMap[groupValue] = group;\n      }\n\n      groupMap[groupValue].data.push(datum);\n    }); // include any aggregate column values across the data for each group\n\n    columns.forEach(function (column) {\n      if (column.aggregate) {\n        result.forEach(function (group) {\n          var datum = group.datum;\n          datum[column.property] = aggregateColumn(column, group.data);\n        });\n      }\n    });\n  }\n\n  return result;\n}; // build group expanded state, expanding any in groupBy.expand\n\nexport var buildGroupState = function buildGroupState(groups, groupBy) {\n  var result = {};\n\n  if (groups) {\n    groups.forEach(function (_ref) {\n      var key = _ref.key;\n      result[key] = {\n        expanded: false\n      };\n    });\n  }\n\n  if (groupBy && groupBy.expand) {\n    groupBy.expand.forEach(function (value) {\n      result[value] = {\n        expanded: true\n      };\n    });\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontend/node_modules/grommet/es6/components/DataTable/buildState.js"],"names":["set","obj","path","value","parts","Object","Array","isArray","toString","match","slice","reduce","acc","item","index","Math","abs","length","datumValue","datum","property","undefined","split","join","normalizePrimaryProperty","columns","primaryKey","result","forEach","column","primary","initializeFilters","search","escapeRegExp","input","replace","filterAndSortData","data","filters","onSearch","sort","regexps","keys","filter","n","RegExp","some","test","external","direction","concat","before","after","d1","d2","sumReducer","accumulated","next","minReducer","min","maxReducer","max","reducers","sum","reducersInitValues","Number","MAX_VALUE","MIN_VALUE","aggregateColumn","aggregate","map","d","buildFooterValues","aggregateValues","footer","buildGroups","groupBy","groupMap","groupByProperty","groupValue","group","key","push","buildGroupState","groups","_ref","expanded","expand"],"mappings":"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","sourcesContent":["// This file contains helper functions for DataTable, to keep the component\n// files simpler.\nexport var set = function set(obj, path, value) {\n  var parts = path;\n  if (Object(obj) !== obj) return obj;\n  if (!Array.isArray(path)) parts = path.toString().match(/[^.[\\]]+/g) || [];\n  parts.slice(0, -1).reduce(function (acc, item, index) {\n    if (Object(acc[item]) === acc[item]) {\n      return acc[item];\n    }\n\n    acc[item] = Math.abs(parts[index + 1]) > 0 === +parts[index + 1] ? [] : {};\n    return acc[item];\n  }, obj)[parts[parts.length - 1]] = value;\n  return obj;\n}; // get the value for the property in the datum object\n\nexport var datumValue = function datumValue(datum, property) {\n  if (!property) return undefined;\n  var parts = property.split('.');\n\n  if (parts.length === 1) {\n    return datum[property];\n  }\n\n  if (!datum[parts[0]]) {\n    return undefined;\n  }\n\n  return datumValue(datum[parts[0]], parts.slice(1).join('.'));\n}; // get the primary property name\n\nexport var normalizePrimaryProperty = function normalizePrimaryProperty(columns, primaryKey) {\n  var result;\n  columns.forEach(function (column) {\n    // remember the first key property\n    if (column.primary && !result) {\n      result = column.property;\n    }\n  });\n\n  if (!result) {\n    if (primaryKey === false) result = undefined;else if (primaryKey) result = primaryKey;else if (columns.length > 0) result = columns[0].property;\n  }\n\n  return result;\n}; // initialize filters with empty strings\n\nexport var initializeFilters = function initializeFilters(columns) {\n  var result = {};\n  columns.forEach(function (column) {\n    if (column.search) {\n      result[column.property] = '';\n    }\n  });\n  return result;\n}; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n\nvar escapeRegExp = function escapeRegExp(input) {\n  return input.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}; // filter data based on filters then sort\n\n\nexport var filterAndSortData = function filterAndSortData(data, filters, onSearch, sort) {\n  var result = data;\n\n  if (!onSearch) {\n    var regexps = {};\n    Object.keys(filters).filter(function (n) {\n      return filters[n];\n    }).forEach(function (n) {\n      regexps[n] = new RegExp(escapeRegExp(filters[n]), 'i');\n    });\n\n    if (Object.keys(regexps).length > 0) {\n      result = data.filter(function (datum) {\n        return !Object.keys(regexps).some(function (property) {\n          return !regexps[property].test(datumValue(datum, property));\n        });\n      });\n    }\n  }\n\n  if (sort && !sort.external) {\n    var property = sort.property,\n        direction = sort.direction;\n    result = result === data ? [].concat(data) : result; // don't sort caller's data\n\n    var before = direction === 'asc' ? 1 : -1;\n    var after = direction === 'asc' ? -1 : 1;\n    result.sort(function (d1, d2) {\n      if (datumValue(d1, property) > datumValue(d2, property)) return before;\n      if (datumValue(d1, property) < datumValue(d2, property)) return after;\n      return 0;\n    });\n  }\n\n  return result;\n}; // aggregate reducers\n\nvar sumReducer = function sumReducer(accumulated, next) {\n  return accumulated + next;\n};\n\nvar minReducer = function minReducer(accumulated, next) {\n  return accumulated === undefined ? next : Math.min(accumulated, next);\n};\n\nvar maxReducer = function maxReducer(accumulated, next) {\n  return accumulated === undefined ? next : Math.max(accumulated, next);\n};\n\nvar reducers = {\n  max: maxReducer,\n  min: minReducer,\n  sum: sumReducer\n}; // aggregate reducers init values\n\nvar reducersInitValues = {\n  min: Number.MAX_VALUE,\n  max: Number.MIN_VALUE,\n  sum: 0\n}; // aggregate a single column\n\nvar aggregateColumn = function aggregateColumn(column, data) {\n  var value;\n\n  if (column.aggregate === 'avg') {\n    value = data.map(function (d) {\n      return datumValue(d, column.property);\n    }).reduce(sumReducer);\n    value /= data.length;\n  } else {\n    value = data.map(function (d) {\n      return datumValue(d, column.property);\n    }).reduce(reducers[column.aggregate], reducersInitValues[column.aggregate]);\n  }\n\n  return value;\n}; // aggregate all columns that can\n\n\nvar aggregate = function aggregate(columns, data) {\n  var result = {};\n  columns.forEach(function (column) {\n    if (column.aggregate) {\n      var value = aggregateColumn(column, data);\n      result = set(result, column.property, value);\n    }\n  });\n  return result;\n}; // build the values for the footer cells\n\n\nexport var buildFooterValues = function buildFooterValues(columns, data) {\n  var aggregateValues = aggregate(columns, data);\n  var result = {};\n  columns.forEach(function (column) {\n    if (column.footer) {\n      if (typeof column.footer === 'string') {\n        result = set(result, column.property, column.footer);\n      } else if (column.footer.aggregate) {\n        var value = datumValue(aggregateValues, column.property);\n        result = set(result, column.property, value);\n      }\n    }\n  });\n  return result;\n}; // looks at the groupBy property of each data object and returns an\n// array with one item for each unique value of that property.\n\nexport var buildGroups = function buildGroups(columns, data, groupBy) {\n  var result;\n\n  if (groupBy) {\n    result = [];\n    var groupMap = {};\n    data.forEach(function (datum) {\n      var groupByProperty = groupBy.property ? groupBy.property : groupBy;\n      var groupValue = datumValue(datum, groupByProperty);\n\n      if (!groupMap[groupValue]) {\n        var group = {\n          data: [],\n          datum: {},\n          key: groupValue\n        };\n        group.datum[groupByProperty] = groupValue;\n        result.push(group);\n        groupMap[groupValue] = group;\n      }\n\n      groupMap[groupValue].data.push(datum);\n    }); // include any aggregate column values across the data for each group\n\n    columns.forEach(function (column) {\n      if (column.aggregate) {\n        result.forEach(function (group) {\n          var datum = group.datum;\n          datum[column.property] = aggregateColumn(column, group.data);\n        });\n      }\n    });\n  }\n\n  return result;\n}; // build group expanded state, expanding any in groupBy.expand\n\nexport var buildGroupState = function buildGroupState(groups, groupBy) {\n  var result = {};\n\n  if (groups) {\n    groups.forEach(function (_ref) {\n      var key = _ref.key;\n      result[key] = {\n        expanded: false\n      };\n    });\n  }\n\n  if (groupBy && groupBy.expand) {\n    groupBy.expand.forEach(function (value) {\n      result[value] = {\n        expanded: true\n      };\n    });\n  }\n\n  return result;\n};"]},"metadata":{},"sourceType":"module"}