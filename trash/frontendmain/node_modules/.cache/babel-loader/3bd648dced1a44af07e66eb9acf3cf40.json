{"ast":null,"code":"var _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontendmain/src/components/ReferenceForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Grid, Button, Header, Segment, Modal, Icon, TextArea } from 'semantic-ui-react';\nconst referencesURL = \"http://localhost:3000/references\";\n\nclass ReferenceForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modelOpen: false,\n      url: \"\",\n      note: \"\",\n      issue_id: this.props.issue.id,\n      references: []\n    };\n\n    this.fetchReferences = () => {\n      fetch(referencesURL, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(references => this.setState({\n        references: references.filter(reference => reference.issue_id == this.props.issue.id)\n      }));\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        modalOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        modalOpen: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(referencesURL, {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          \"url\": this.state.url,\n          \"note\": this.state.note,\n          \"issue_id\": this.state.issue_id\n        })\n      }).then(res => res.json()).then(() => this.fetchReferences());\n      this.props.newReferences(this.state);\n      this.handleClose();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        className: \"add-reference-button\",\n        onClick: this.handleOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }\n      }, \"+ Reference\"),\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      basic: true,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"add\",\n      content: \"Reference\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Add a reference\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"URL\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"url\",\n      name: \"url\",\n      placeholder: \"paste url\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }\n    }, \"Note\"), /*#__PURE__*/React.createElement(TextArea, {\n      type: \"text\",\n      name: \"note\",\n      placeholder: \"how did this reference help solve the issue?\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      onClick: this.handleSubmit,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), \" Submit\")));\n  }\n\n}\n\nexport default ReferenceForm;","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontendmain/src/components/ReferenceForm.js"],"names":["React","Component","Form","Grid","Button","Header","Segment","Modal","Icon","TextArea","referencesURL","ReferenceForm","state","modelOpen","url","note","issue_id","props","issue","id","references","fetchReferences","fetch","method","headers","localStorage","getItem","then","res","json","setState","filter","reference","handleChange","event","target","name","value","handleOpen","modalOpen","handleClose","handleSubmit","body","JSON","stringify","newReferences","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Grid, Button, Header, Segment, Modal, Icon, TextArea } from 'semantic-ui-react'\n\n\n\nconst referencesURL = \"http://localhost:3000/references\"\n\nclass ReferenceForm extends Component {\n    state = { \n        modelOpen: false,\n        url: \"\",\n        note: \"\",\n        issue_id: this.props.issue.id,\n        references: [],\n     }\n\n\n\n\n\n     fetchReferences = () => {\n        fetch(referencesURL, \n            {method:'GET',\n             headers: {'Authorization': `Bearer ${localStorage.getItem(\"token\")}`}\n            })\n        .then(res => res.json())\n        .then(references => this.setState({references: references.filter(reference => reference.issue_id == this.props.issue.id)}))\n    }\n\n     handleChange = (event) => { \n        this.setState({[event.target.name]: event.target.value})\n      }\n\n    handleOpen = () => { this.setState({ modalOpen: true }) }\n\n    handleClose = () => { this.setState({ modalOpen: false }) }\n\n    handleSubmit = () => {\n        fetch(referencesURL, {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify ({\n            \"url\": this.state.url,\n            \"note\": this.state.note,\n            \"issue_id\": this.state.issue_id,\n          })\n        })\n        .then(res => res.json())\n        .then(() => this.fetchReferences())\n        this.props.newReferences(this.state)\n        this.handleClose()\n            }\n\n\n\n    render() { \n        return ( \n            <Modal\n            trigger={<Button className=\"add-reference-button\" onClick={this.handleOpen}>+ Reference</Button>}\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n            basic\n            size='small'\n        >\n            <Header icon='add' content='Reference' />\n            <Modal.Content>\n                <h3>Add a reference</h3>\n                <Form >\n                    <h4>URL</h4>\n                    <input type=\"url\" name=\"url\" placeholder=\"paste url\" onChange={this.handleChange} />\n                     <h4>Note</h4>\n                    <TextArea type=\"text\" name=\"note\" placeholder='how did this reference help solve the issue?' onChange={this.handleChange}/>\n                </Form>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='green' onClick={this.handleSubmit} inverted>\n                    <Icon name='checkmark' /> Submit\n          </Button>\n            </Modal.Actions>\n        </Modal>\n\n         );\n    }\n}\n \nexport default ReferenceForm;"]},"metadata":{},"sourceType":"module"}