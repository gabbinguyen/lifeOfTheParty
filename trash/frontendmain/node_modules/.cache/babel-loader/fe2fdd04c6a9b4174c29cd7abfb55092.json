{"ast":null,"code":"var _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontendmain/src/components/ProjectForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Grid, Button, Header, Segment, Modal, Icon } from 'semantic-ui-react';\nconst projectsURL = \"http://localhost:3000/projects\";\n\nclass ProjectForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      project_name: \"\",\n      user_id: this.props.userId,\n      modalOpen: false,\n      projects: []\n    };\n\n    this.fetchProjects = () => {\n      fetch(projectsURL, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(projects => this.setState({\n        projects: projects.filter(project => project.user_id == this.props.userId)\n      }));\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOpen = () => this.setState({\n      modalOpen: true\n    });\n\n    this.handleClose = () => {\n      this.setState({\n        modalOpen: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(\"http://localhost:3000/projects\", {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          \"project_name\": this.state.project_name,\n          \"user_id\": this.state.user_id\n        })\n      }).then(res => res.json()).then(() => this.fetchProjects());\n      this.props.newProjects(this.state);\n      this.handleClose();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        className: \"project-button\",\n        onClick: this.handleOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }\n      }, \"+ Project\"),\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      basic: true,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      icon: \"add\",\n      content: \"Project\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"What is your projects name?\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"project_name\",\n      placeholder: \"Name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Modal.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"green\",\n      onClick: this.handleSubmit,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), \" Submit\")));\n  }\n\n}\n\nexport default ProjectForm;","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontendmain/src/components/ProjectForm.js"],"names":["React","Component","Form","Grid","Button","Header","Segment","Modal","Icon","projectsURL","ProjectForm","state","project_name","user_id","props","userId","modalOpen","projects","fetchProjects","fetch","method","headers","localStorage","getItem","then","res","json","setState","filter","project","handleChange","event","target","name","value","handleOpen","handleClose","handleSubmit","body","JSON","stringify","newProjects","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Grid, Button, Header, Segment, Modal, Icon } from 'semantic-ui-react'\n\n\n\nconst projectsURL = \"http://localhost:3000/projects\"\n\nclass ProjectForm extends Component {\n\n    state = {\n        project_name: \"\",\n        user_id: this.props.userId,\n        modalOpen: false,\n        projects: []\n    }\n\n    fetchProjects = () => {\n      fetch(projectsURL, \n          {method:'GET',\n           headers: {'Authorization': `Bearer ${localStorage.getItem(\"token\")}`}\n          })\n      .then(res => res.json())\n      .then(projects => this.setState({projects: projects.filter(project => project.user_id == this.props.userId)}))\n  }\n\n\n\n    handleChange = (event) => { \n        this.setState({\n          [event.target.name]: event.target.value\n        })\n      }\n\n    handleOpen = () => this.setState({ modalOpen: true })\n\n    handleClose = () => {\n        this.setState({ modalOpen: false })\n        \n    }\n\n    handleSubmit = () => {\n        fetch(\"http://localhost:3000/projects\", {\n          method: \"POST\",\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n          },\n          body: JSON.stringify ({\n            \"project_name\": this.state.project_name,\n            \"user_id\": this.state.user_id\n          })\n        })\n        .then(res => res.json())\n        .then(() => this.fetchProjects())\n        this.props.newProjects(this.state)\n        this.handleClose()\n        \n    }\n\n\n    render() {\n        \n        return (\n            <Modal\n            trigger={<Button className=\"project-button\" onClick={this.handleOpen}>+ Project</Button>}\n            open={this.state.modalOpen}\n            onClose={this.handleClose}\n            basic\n            size='small'\n          >\n            <Header icon='add' content='Project' />\n            <Modal.Content>\n              <h3>What is your projects name?</h3>\n              <Form >\n                            <input type=\"text\" name=\"project_name\" placeholder=\"Name\" onChange={this.handleChange} />\n                        </Form>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color='green' onClick={this.handleSubmit}  inverted>\n                <Icon name='checkmark' /> Submit\n              </Button>\n            </Modal.Actions>\n          </Modal>\n\n        );\n    }\n}\n\nexport default ProjectForm;"]},"metadata":{},"sourceType":"module"}