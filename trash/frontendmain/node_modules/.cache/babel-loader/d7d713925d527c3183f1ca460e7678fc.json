{"ast":null,"code":"var _jsxFileName = \"/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontendmain/src/pages/Project.js\";\nimport React, { Component } from 'react';\nimport EditIssueForm from '../components/EditIssueForm';\nimport IssueForm from '../components/IssueForm';\nimport IssuesContainer from '../containers/IssuesContainer';\nconst issuesURL = \"http://localhost:3000/issues\";\n\nclass Project extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      issues: [],\n      modalOpen: false,\n      issueId: \"\"\n    };\n\n    this.fetchIssues = () => {\n      fetch(issuesURL, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }).then(res => res.json()).then(issues => this.setState({\n        issues: issues.filter(issue => issue.project_id == this.props.project.id)\n      }));\n    };\n\n    this.projectHandler = data => {\n      this.setState({\n        issues: [...this.state.issues, data]\n      });\n    };\n\n    this.deleteIssue = issue => {\n      this.setState({\n        issues: this.state.issues.filter(newIssue => newIssue.id !== issue.id)\n      });\n      fetch(`http://localhost:3000/issues/${issue.id}`, {\n        method: \"DELETE\",\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n          Accepts: 'application/json',\n          \"Content-type\": 'application/json'\n        }\n      });\n    };\n\n    this.editIssue = issue => {\n      this.setState({\n        modalOpen: !this.state.modalOpen,\n        issueId: issue.id\n      });\n    };\n\n    this.changeIssue = e => {\n      this.setState({\n        modalOpen: !this.state.modalOpen\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchIssues();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project\",\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/desktop_5.jpeg'})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"project-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, this.props.project.project_name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IssueForm, {\n      project: this.props.project,\n      modalOpen: this.state.modalOpen,\n      newIssues: this.projectHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(IssuesContainer, {\n      deleteIssue: this.deleteIssue,\n      editIssue: this.editIssue,\n      showIssuePage: this.props.showIssuePage,\n      issues: this.state.issues,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(EditIssueForm, {\n      modalOpen: this.state.modalOpen,\n      fetchIssues: this.fetchIssues,\n      issueId: this.state.issueId,\n      changeIssue: this.changeIssue,\n      newIssues: this.projectHandler,\n      project: this.props.project,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Project;","map":{"version":3,"sources":["/Users/gabbinguyen/Flatiron/code/Projects/LifeOfTheParty/frontendmain/src/pages/Project.js"],"names":["React","Component","EditIssueForm","IssueForm","IssuesContainer","issuesURL","Project","state","issues","modalOpen","issueId","fetchIssues","fetch","method","headers","localStorage","getItem","then","res","json","setState","filter","issue","project_id","props","project","id","projectHandler","data","deleteIssue","newIssue","Accepts","editIssue","changeIssue","e","componentDidMount","render","backgroundImage","process","env","PUBLIC_URL","project_name","showIssuePage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport EditIssueForm from '../components/EditIssueForm';\nimport IssueForm from '../components/IssueForm'\nimport IssuesContainer from '../containers/IssuesContainer';\n\n\nconst issuesURL = \"http://localhost:3000/issues\"\n\nclass Project extends Component {\n\n    state = {\n        issues: [],\n        modalOpen: false,\n        issueId: \"\"\n    }\n\n    componentDidMount() {\n        this.fetchIssues()\n    }\n\n    fetchIssues = () => {\n        fetch(issuesURL,\n            {\n                method: 'GET',\n                headers: { 'Authorization': `Bearer ${localStorage.getItem(\"token\")}` }\n            })\n            .then(res => res.json())\n            .then(issues => this.setState({ issues: issues.filter(issue => issue.project_id == this.props.project.id) }))\n    }\n\n    projectHandler = (data) => {\n        this.setState({ issues: [...this.state.issues, data] })\n    }\n\n    deleteIssue = (issue) => {\n        this.setState({ issues: this.state.issues.filter(newIssue => newIssue.id !== issue.id) })\n        fetch(`http://localhost:3000/issues/${issue.id}`, {\n            method: \"DELETE\",\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`,\n                Accepts: 'application/json',\n                \"Content-type\": 'application/json'\n            }\n        })\n    }\n\n    editIssue = (issue) => {\n        \n        this.setState({modalOpen: !this.state.modalOpen, issueId: issue.id})\n\n    }\n\n    changeIssue = (e) => {\n        \n        this.setState({modalOpen: !this.state.modalOpen})\n    }\n\n    \n\n    render() {\n        return (\n\n            <div className=\"project\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL + '/desktop_5.jpeg'})` }}>\n                <div>\n                    <div>\n                        <h1 className=\"project-name\">{this.props.project.project_name}</h1>\n                    </div>\n                    <div>\n                        <IssueForm project={this.props.project}  modalOpen={this.state.modalOpen} newIssues={this.projectHandler} />\n                        <IssuesContainer deleteIssue={this.deleteIssue} editIssue={this.editIssue} showIssuePage={this.props.showIssuePage} issues={this.state.issues} />\n                        <EditIssueForm modalOpen={this.state.modalOpen} fetchIssues={this.fetchIssues} issueId={this.state.issueId} changeIssue={this.changeIssue} newIssues={this.projectHandler} project={this.props.project}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}